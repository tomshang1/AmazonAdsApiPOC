openapi: 3.0.2
info:
  title: AmazonAdsAPI
  version: v1
paths:
  /adsApi/v1/create/adGroups:
    post:
      operationId: CreateAdGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdGroupRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: CreateAdGroup 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - AdGroups
  /adsApi/v1/create/ads:
    post:
      operationId: CreateAd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAdRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: CreateAd 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Ads
  /adsApi/v1/create/campaigns:
    post:
      operationId: CreateCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaignRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: CreateCampaign 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Campaigns
  /adsApi/v1/create/targets:
    post:
      operationId: CreateTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTargetRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: CreateTarget 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Targets
  /adsApi/v1/delete/adGroups:
    post:
      operationId: DeleteAdGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAdGroupRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: DeleteAdGroup 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - AdGroups
  /adsApi/v1/delete/ads:
    post:
      operationId: DeleteAd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAdRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: DeleteAd 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Ads
  /adsApi/v1/delete/campaigns:
    post:
      operationId: DeleteCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: DeleteCampaign 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Campaigns
  /adsApi/v1/delete/targets:
    post:
      operationId: DeleteTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTargetRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: DeleteTarget 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Targets
  /adsApi/v1/query/adGroups:
    post:
      operationId: QueryAdGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAdGroupRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '200':
          description: QueryAdGroup 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupSuccessResponse'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - AdGroups
  /adsApi/v1/query/ads:
    post:
      operationId: QueryAd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAdRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '200':
          description: QueryAd 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdSuccessResponse'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Ads
  /adsApi/v1/query/campaigns:
    post:
      operationId: QueryCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCampaignRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '200':
          description: QueryCampaign 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignSuccessResponse'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Campaigns
  /adsApi/v1/query/targets:
    post:
      operationId: QueryTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTargetRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '200':
          description: QueryTarget 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetSuccessResponse'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Targets
  /adsApi/v1/update/adGroups:
    post:
      operationId: UpdateAdGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdGroupRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: UpdateAdGroup 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdGroupMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - AdGroups
  /adsApi/v1/update/ads:
    post:
      operationId: UpdateAd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAdRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: UpdateAd 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Ads
  /adsApi/v1/update/campaigns:
    post:
      operationId: UpdateCampaign
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: UpdateCampaign 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Campaigns
  /adsApi/v1/update/targets:
    post:
      operationId: UpdateTarget
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTargetRequest'
      parameters:
        - $ref: '#/components/parameters/AccountIdHeader'
        - $ref: '#/components/parameters/ClientIdHeader'
        - $ref: '#/components/parameters/ScopeHeader'
      responses:
        '207':
          description: UpdateTarget 207 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetMultiStatusResponseWithPartialErrors'
        '400':
          description: BadRequest 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponseContent'
        '401':
          description: Unauthorized 401 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponseContent'
        '403':
          description: Forbidden 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponseContent'
        '404':
          description: NotFound 404 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponseContent'
        '413':
          description: ContentTooLarge 413 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentTooLargeResponseContent'
        '429':
          description: TooManyRequests 429 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsResponseContent'
        '500':
          description: InternalServerError 500 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorResponseContent'
        '502':
          description: BadGateway 502 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadGatewayResponseContent'
        '503':
          description: ServiceUnavailableError 503 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableErrorResponseContent'
        '504':
          description: GatewayTimeout 504 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GatewayTimeoutResponseContent'
      tags:
        - Targets
components:
  schemas:
    AcrossGroupOperator:
      type: string
      enum:
        - ANY
        - ALL
    Ad:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        activeCreative:
          $ref: '#/components/schemas/Creative'
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        campaignId:
          type: string
          description: The campaign associated with the ad. It's a read-only field.
        adGroupId:
          type: string
          description: The ad group associated with the ad.
        creative:
          $ref: '#/components/schemas/Creative'
        adType:
          $ref: '#/components/schemas/AdType'
        adId:
          type: string
          description: The identifier of the ad.
        state:
          $ref: '#/components/schemas/States'
        name:
          type: string
          description: The name of the ad.
        lastUpdatedDateTime:
          type: string
          description: The date time that the ad was last updated.
          format: date-time
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the ad
        creationDateTime:
          type: string
          description: The date time that the ad was created.
          format: date-time
      required:
        - adGroupId
        - adId
        - adProduct
        - adType
        - campaignId
        - creationDateTime
        - creative
        - lastUpdatedDateTime
        - marketplaceScope
        - state
        - status
    AdAdGroupIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    AdAdIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    AdAdProductFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/AdProduct'
          maxItems: 1
          minItems: 1
      required:
        - include
    AdCampaignIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    AdCreate:
      type: object
      properties:
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        adGroupId:
          type: string
          description: The ad group associated with the ad.
        creative:
          $ref: '#/components/schemas/CreateCreative'
        adType:
          $ref: '#/components/schemas/AdType'
        state:
          $ref: '#/components/schemas/CreateStates'
        name:
          type: string
          description: The name of the ad.
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CreateTag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the ad
      required:
        - adGroupId
        - adProduct
        - adType
        - creative
        - marketplaceScope
        - state
    AdGroup:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        campaignId:
          type: string
          description: The unique identifier of the campaign the ad group belongs to.
        creativeRotationType:
          $ref: '#/components/schemas/CreativeRotationType'
        frequencies:
          type: array
          items:
            $ref: '#/components/schemas/Frequency'
          maxItems: 10
          minItems: 0
          description: An object containing frequency details for the ad group.
        endDateTime:
          type: string
          description: The end date time for the ad group.
          format: date-time
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
          maxItems: 100
          minItems: 0
          description: The fees associated with the ad group.
        advertisedProductCategoryIds:
          type: array
          items:
            type: string
          maxItems: 10
          minItems: 0
          description: The array of identifiers of product categories associated with the ad group. For VIDEO ad group type only one parent product category or multiple sub-categories from one parent product category are allowed.
        adGroupId:
          type: string
          description: The unique identifier of the ad group.
        optimization:
          $ref: '#/components/schemas/Optimization'
        targetingSettings:
          $ref: '#/components/schemas/TargetingSettings'
        startDateTime:
          type: string
          description: The start date time for the ad group.
          format: date-time
        state:
          $ref: '#/components/schemas/States'
        purchaseOrderNumber:
          type: string
          description: The purchase order number associated with the ad group.
        name:
          type: string
          description: The name of the ad group.
        pacing:
          $ref: '#/components/schemas/Pacing'
        lastUpdatedDateTime:
          type: string
          description: The date time that the ad group was last updated.
          format: date-time
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        bid:
          $ref: '#/components/schemas/AdGroupBidValue'
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/Budget'
          maxItems: 3
          minItems: 0
          description: An object containing budget details for the ad group.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the ad group
        creationDateTime:
          type: string
          description: The date time that the ad group was created.
          format: date-time
      required:
        - adGroupId
        - adProduct
        - campaignId
        - creationDateTime
        - lastUpdatedDateTime
        - marketplaceScope
        - name
        - state
        - status
    AdGroupAdGroupIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    AdGroupAdProductFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/AdProduct'
          maxItems: 1
          minItems: 1
      required:
        - include
    AdGroupBid:
      type: object
      properties:
        defaultBid:
          type: number
          description: The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.
          format: double
        baseBid:
          type: number
          description: The lower bound bid used for the ads in the ad group.
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        maxAverageBid:
          type: number
          description: The max average bid that will be targeted on the ad group across all of the bids (a single bid could be lower or higher that this number).
          format: double
      required:
        - currencyCode
    AdGroupBidMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        bid:
          $ref: '#/components/schemas/AdGroupBid'
      required:
        - bid
        - marketplace
    AdGroupBidValue:
      type: object
      properties:
        bid:
          $ref: '#/components/schemas/AdGroupBid'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/AdGroupBidMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The bid associated with the ad group at specified marketplace level. Either one of bid or marketplaceSettings should always be specified
    AdGroupBudgetSettings:
      type: object
      properties:
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
        dailyMinSpendValue:
          type: number
          description: Denotes the daily minimum spend on the ad group in local currency.
          format: double
    AdGroupCampaignIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    AdGroupCreate:
      type: object
      properties:
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        campaignId:
          type: string
          description: The unique identifier of the campaign the ad group belongs to.
        creativeRotationType:
          $ref: '#/components/schemas/CreativeRotationType'
        frequencies:
          type: array
          items:
            $ref: '#/components/schemas/CreateFrequency'
          maxItems: 10
          minItems: 0
          description: An object containing frequency details for the ad group.
        endDateTime:
          type: string
          description: The end date time for the ad group.
          format: date-time
        fees:
          type: array
          items:
            $ref: '#/components/schemas/CreateFee'
          maxItems: 100
          minItems: 0
          description: The fees associated with the ad group.
        advertisedProductCategoryIds:
          type: array
          items:
            type: string
          maxItems: 10
          minItems: 0
          description: The array of identifiers of product categories associated with the ad group. For VIDEO ad group type only one parent product category or multiple sub-categories from one parent product category are allowed.
        optimization:
          $ref: '#/components/schemas/CreateOptimization'
        targetingSettings:
          $ref: '#/components/schemas/CreateTargetingSettings'
        startDateTime:
          type: string
          description: The start date time for the ad group.
          format: date-time
        state:
          $ref: '#/components/schemas/CreateStates'
        purchaseOrderNumber:
          type: string
          description: The purchase order number associated with the ad group.
        name:
          type: string
          description: The name of the ad group.
        pacing:
          $ref: '#/components/schemas/CreatePacing'
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        bid:
          $ref: '#/components/schemas/CreateAdGroupBidValue'
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/CreateBudget'
          maxItems: 3
          minItems: 0
          description: An object containing budget details for the ad group.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CreateTag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the ad group
      required:
        - adProduct
        - campaignId
        - marketplaceScope
        - name
        - state
    AdGroupMarketplaceScopeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceScope'
          maxItems: 1
          minItems: 0
      required:
        - include
    AdGroupMultiStatusResponseWithPartialErrors:
      type: object
      properties:
        success:
          type: array
          items:
            $ref: '#/components/schemas/AdGroupMultiStatusSuccess'
          maxItems: 1000
          minItems: 0
        partialSuccess:
          type: array
          items:
            $ref: '#/components/schemas/AdGroupPartialIndex'
          maxItems: 1000
          minItems: 0
        error:
          type: array
          items:
            $ref: '#/components/schemas/ErrorsIndex'
          maxItems: 1000
          minItems: 0
    AdGroupMultiStatusSuccess:
      type: object
      properties:
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        adGroup:
          $ref: '#/components/schemas/AdGroup'
      required:
        - adGroup
        - index
    AdGroupNameFilter:
      type: object
      properties:
        queryTermMatchType:
          $ref: '#/components/schemas/AdGroupNameFilterType'
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    AdGroupNameFilterType:
      type: string
      enum:
        - EXACT_MATCH
        - BROAD_MATCH
    AdGroupPartialIndex:
      type: object
      properties:
        adGroup:
          $ref: '#/components/schemas/AdGroup'
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          minItems: 1
      required:
        - adGroup
        - errors
        - index
    AdGroupStateFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/State'
          maxItems: 3
          minItems: 0
      required:
        - include
    AdGroupSuccessResponse:
      type: object
      properties:
        nextToken:
          type: string
        adGroups:
          type: array
          items:
            $ref: '#/components/schemas/AdGroup'
          maxItems: 5000
          minItems: 0
    AdGroupUpdate:
      type: object
      properties:
        inventoryType:
          $ref: '#/components/schemas/InventoryType'
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        creativeRotationType:
          $ref: '#/components/schemas/CreativeRotationType'
        frequencies:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFrequency'
          maxItems: 10
          minItems: 0
        endDateTime:
          type: string
          format: date-time
        fees:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFee'
          maxItems: 100
          minItems: 0
        advertisedProductCategoryIds:
          type: array
          items:
            type: string
          maxItems: 10
          minItems: 0
        adGroupId:
          type: string
          description: The unique identifier of the ad group.
        optimization:
          $ref: '#/components/schemas/UpdateOptimization'
        targetingSettings:
          $ref: '#/components/schemas/UpdateTargetingSettings'
        startDateTime:
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/UpdateStates'
        purchaseOrderNumber:
          type: string
        name:
          type: string
        pacing:
          $ref: '#/components/schemas/UpdatePacing'
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        bid:
          $ref: '#/components/schemas/UpdateAdGroupBidValue'
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBudget'
          maxItems: 3
          minItems: 0
        tags:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTag'
          maxItems: 50
          minItems: 0
      required:
        - adGroupId
    AdInitiationTarget:
      type: object
      description: Target based on how the video ad will be started.
      properties:
        videoInitiationType:
          $ref: '#/components/schemas/VideoInitiationType'
      required:
        - videoInitiationType
    AdMarketplaceScopeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceScope'
          maxItems: 1
          minItems: 0
      required:
        - include
    AdMultiStatusResponseWithPartialErrors:
      type: object
      properties:
        success:
          type: array
          items:
            $ref: '#/components/schemas/AdMultiStatusSuccess'
          maxItems: 1000
          minItems: 0
        partialSuccess:
          type: array
          items:
            $ref: '#/components/schemas/AdPartialIndex'
          maxItems: 1000
          minItems: 0
        error:
          type: array
          items:
            $ref: '#/components/schemas/ErrorsIndex'
          maxItems: 1000
          minItems: 0
    AdMultiStatusSuccess:
      type: object
      properties:
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        ad:
          $ref: '#/components/schemas/Ad'
      required:
        - ad
        - index
    AdNameFilter:
      type: object
      properties:
        queryTermMatchType:
          $ref: '#/components/schemas/AdNameFilterType'
        include:
          type: array
          items:
            type: string
          maxItems: 10
          minItems: 0
      required:
        - include
    AdNameFilterType:
      type: string
      enum:
        - EXACT_MATCH
        - BROAD_MATCH
    AdPartialIndex:
      type: object
      properties:
        ad:
          $ref: '#/components/schemas/Ad'
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          minItems: 1
      required:
        - ad
        - errors
        - index
    AdPlayerSize:
      type: string
      enum:
        - SMALL
        - MEDIUM
        - LARGE
        - UNKNOWN
    AdPlayerSizeTarget:
      type: object
      description: Target based on the size of the ad player.
      properties:
        adPlayerSize:
          $ref: '#/components/schemas/AdPlayerSize'
      required:
        - adPlayerSize
    AdProduct:
      type: string
      enum:
        - AMAZON_DSP
        - SPONSORED_PRODUCTS
        - SPONSORED_BRANDS
    AdStateFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/State'
          maxItems: 3
          minItems: 0
      required:
        - include
    AdSuccessResponse:
      type: object
      properties:
        nextToken:
          type: string
        ads:
          type: array
          items:
            $ref: '#/components/schemas/Ad'
          maxItems: 1000
          minItems: 0
    AdType:
      type: string
      enum:
        - PRODUCT_AD
        - VIDEO
        - STORE_SPOTLIGHT
        - PRODUCT_COLLECTION
    AdUpdate:
      type: object
      properties:
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        creative:
          $ref: '#/components/schemas/UpdateCreative'
        adId:
          type: string
          description: The identifier of the ad.
        state:
          $ref: '#/components/schemas/UpdateStates'
        name:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTag'
          maxItems: 50
          minItems: 0
      required:
        - adId
    AdvertisedProductMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        productId:
          type: string
          description: The identifier of the product advertised.
        resolvedProductId:
          type: string
          description: The identifier of product associated with the advertised product. It's a read-only field.
      required:
        - marketplace
        - productId
    AdvertisedProducts:
      type: object
      properties:
        resolvedProductIdType:
          $ref: '#/components/schemas/ProductIdType'
        resolvedProductId:
          type: string
          description: The identifier of product associated with the advertised product. It's a read-only field.
        productIdType:
          $ref: '#/components/schemas/ProductIdType'
        productId:
          type: string
          description: The identifier of the advertised product.
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/AdvertisedProductMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of advertised product selectively applied at the given marketplace level
      required:
        - productIdType
    AdvertiserDomainList:
      type: object
      description: Targets domains based on list inherited from the advertiser.
      properties:
        inheritFromAdvertiser:
          type: boolean
          description: Set to TRUE to inherit domain list from advertiser.
      required:
        - inheritFromAdvertiser
    AmazonViewability:
      type: object
      properties:
        viewabilityTier:
          $ref: '#/components/schemas/ViewabilityTier'
        includeUnmeasurableImpressions:
          type: boolean
          description: Must be false if viewabilityTier is set to ALL_TIERS. You can set to true to include impressions that can not be measured when a viewabilityTier other than ALL_TIERS is selected. We recommend setting to false if high viewability is your goal.
      required:
        - includeUnmeasurableImpressions
        - viewabilityTier
    AppTarget:
      type: object
      description: Target based on user application.
      properties:
        appId:
          type: string
          description: The app identifier being targeted.
        appType:
          $ref: '#/components/schemas/AppType'
      required:
        - appId
        - appType
    AppType:
      type: string
      enum:
        - MOBILE
        - STREAMING_TV
    AudienceSegment:
      type: object
      properties:
        audienceId:
          type: string
          description: This is an Audience identifier vended by Audience Discovery.
        audienceSegmentType:
          $ref: '#/components/schemas/AudienceSegmentType'
      required:
        - audienceId
        - audienceSegmentType
    AudienceSegmentType:
      type: string
      enum:
        - SPONSORED_ADS_AMC
    AudienceTarget:
      type: object
      description: Target based on a specified audience ID.
      properties:
        acrossGroupOperator:
          $ref: '#/components/schemas/AcrossGroupOperator'
        groupId:
          type: string
          description: 'The string identifying a group of audiences. Only numbers formatted as strings are accepted (e.g. ''1''). To add audiences to a new group, choose any string not currently being used on this ad group. To add audiences to an existing group, use the existing groupId from this ad group. You may specify up to 10 include groups and 1 exclude group.'
        inGroupOperator:
          $ref: '#/components/schemas/InGroupOperator'
        audienceId:
          $ref: '#/components/schemas/MarketplaceStringValue'
      required:
        - audienceId
    AutoCreationSettings:
      type: object
      properties:
        autoCreateTargets:
          type: boolean
          description: Gives Amazon permission to automatically create targets associated with the campaign based on the products being advertised.
    AverageCompletionAndFullyViewableRateTargetingType:
      type: string
      description: The type of average completion and fully viewable rate targeting.
      enum:
        - AVG_COMPLETION_FULLY_VIEWABLE_GTE_30
        - AVG_COMPLETION_FULLY_VIEWABLE_GTE_10
        - AVG_COMPLETION_FULLY_VIEWABLE_GTE_40
        - AVG_COMPLETION_FULLY_VIEWABLE_GTE_35
        - ALLOW_ALL
        - AVG_COMPLETION_FULLY_VIEWABLE_GTE_20
        - AVG_COMPLETION_FULLY_VIEWABLE_GTE_25
    BadGatewayResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    BadRequestResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    BidAdjustments:
      type: object
      properties:
        placementBidAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/PlacementBidAdjustment'
          maxItems: 4
          minItems: 0
          description: Bid adjustments based on ad placements.
        shopperCohortBidAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/ShopperCohortBidAdjustment'
          maxItems: 2
          minItems: 0
          description: Bid Adjustments based on shopper cohorts.
    BidSettings:
      type: object
      properties:
        bidStrategy:
          $ref: '#/components/schemas/BidStrategy'
        bidAdjustments:
          $ref: '#/components/schemas/BidAdjustments'
    BidStrategy:
      type: string
      enum:
        - SALES_DOWN_ONLY
        - PRIORITIZE_KPI_TARGET
        - NEW_TO_BRAND
        - RULE_BASED
        - SALES_UP_AND_DOWN
        - SPEND_BUDGET_IN_FULL
        - USE_CAMPAIGN_STRATEGY
        - MANUAL
    BrandExposureViewabilityTargetingType:
      type: string
      description: The type of brand exposure viewability targeting.
      enum:
        - ALLOW_ALL
        - BRAND_EXPOSURE_VIEWABILITY_GTE_5_SEC_AVG_DURATION
        - BRAND_EXPOSURE_VIEWABILITY_GTE_10_SEC_AVG_DURATION
        - BRAND_EXPOSURE_VIEWABILITY_GTE_15_SEC_AVG_DURATION
    BrandSuitabilityRiskLevelType:
      type: string
      description: The Double Verify brand suitability risk level.
      enum:
        - HIGH
        - HIGH_MEDIUM
        - ALLOW_ALL
        - HIGH_MEDIUM_LOW
    Budget:
      type: object
      properties:
        recurrenceTimePeriod:
          $ref: '#/components/schemas/Recurrence'
        budgetType:
          $ref: '#/components/schemas/BudgetType'
        budgetValue:
          $ref: '#/components/schemas/BudgetValue'
      required:
        - budgetType
        - budgetValue
        - recurrenceTimePeriod
    BudgetAllocation:
      type: string
      enum:
        - AUTO
        - MANUAL
    BudgetSettings:
      type: object
      properties:
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
        offAmazonBudgetControlStrategy:
          $ref: '#/components/schemas/OffAmazonBudgetControlStrategy'
    BudgetType:
      type: string
      enum:
        - MONETARY
    BudgetValue:
      oneOf:
        - type: object
          title: monetaryBudgetValue
          properties:
            monetaryBudgetValue:
              $ref: '#/components/schemas/MonetaryBudgetValue'
          required:
            - monetaryBudgetValue
    Campaign:
      type: object
      properties:
        skanAppId:
          type: string
          description: StoreKit AdNetwork application ID. Represents iTunes application ID with which SKAN-enabled campaigns are associated.
        flights:
          type: array
          items:
            $ref: '#/components/schemas/CampaignFlight'
          maxItems: 10
          minItems: 0
          description: Flight details associated with the campaign.
        costType:
          $ref: '#/components/schemas/CostType'
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/Budget'
          maxItems: 3
          minItems: 0
          description: The object containing budget details for the campaign (for campaigns that support multiple budgets).
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the campaign
        creationDateTime:
          type: string
          description: The date time that the campaign was created.
          format: date-time
        status:
          $ref: '#/components/schemas/Status'
        isMultiAdGroupsEnabled:
          type: boolean
          description: A read-only field that indicates whether a campaign supports multiple adGroups.
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        campaignId:
          type: string
          description: A unique identifier for a campaign.
        frequencies:
          type: array
          items:
            $ref: '#/components/schemas/Frequency'
          maxItems: 10
          minItems: 0
          description: Any frequency caps associated with the campaign.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Fee'
          maxItems: 2
          minItems: 0
          description: Any fees associated with the campaign.
        endDateTime:
          type: string
          description: The end date time for the campaign.
          format: date-time
        portfolioId:
          type: string
          description: The ID of the portfolio associated with the campaign.
        startDateTime:
          type: string
          description: The start date time for the campaign.
          format: date-time
        targetsAmazonDeal:
          type: boolean
          description: 'If the campaign is targeting an Amazon deal, the value will be true, and the campaign and ad group(s) will be read-only.'
        state:
          $ref: '#/components/schemas/States'
        purchaseOrderNumber:
          type: string
          description: The purchase order number associated with the campaign.
        brandId:
          type: string
          description: This is the ID of the brand that the campaign is associated with.
        name:
          type: string
          description: The name of the campaign.
        autoCreationSettings:
          $ref: '#/components/schemas/AutoCreationSettings'
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        lastUpdatedDateTime:
          type: string
          description: The date time that the campaign was last updated.
          format: date-time
        optimizations:
          $ref: '#/components/schemas/CampaignOptimizations'
      required:
        - adProduct
        - campaignId
        - creationDateTime
        - lastUpdatedDateTime
        - marketplaceScope
        - name
        - state
        - status
    CampaignAdProductFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/AdProduct'
          maxItems: 1
          minItems: 1
      required:
        - include
    CampaignCampaignIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    CampaignCreate:
      type: object
      properties:
        skanAppId:
          type: string
          description: StoreKit AdNetwork application ID. Represents iTunes application ID with which SKAN-enabled campaigns are associated.
        flights:
          type: array
          items:
            $ref: '#/components/schemas/CreateCampaignFlight'
          maxItems: 10
          minItems: 0
          description: Flight details associated with the campaign.
        costType:
          $ref: '#/components/schemas/CostType'
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/CreateBudget'
          maxItems: 3
          minItems: 0
          description: The object containing budget details for the campaign (for campaigns that support multiple budgets).
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CreateTag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the campaign
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        frequencies:
          type: array
          items:
            $ref: '#/components/schemas/CreateFrequency'
          maxItems: 10
          minItems: 0
          description: Any frequency caps associated with the campaign.
        fees:
          type: array
          items:
            $ref: '#/components/schemas/CreateFee'
          maxItems: 2
          minItems: 0
          description: Any fees associated with the campaign.
        endDateTime:
          type: string
          description: The end date time for the campaign.
          format: date-time
        portfolioId:
          type: string
          description: The ID of the portfolio associated with the campaign.
        startDateTime:
          type: string
          description: The start date time for the campaign.
          format: date-time
        state:
          $ref: '#/components/schemas/CreateStates'
        purchaseOrderNumber:
          type: string
          description: The purchase order number associated with the campaign.
        brandId:
          type: string
          description: This is the ID of the brand that the campaign is associated with.
        name:
          type: string
          description: The name of the campaign.
        autoCreationSettings:
          $ref: '#/components/schemas/CreateAutoCreationSettings'
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        optimizations:
          $ref: '#/components/schemas/CreateCampaignOptimizations'
      required:
        - adProduct
        - marketplaceScope
        - name
        - state
    CampaignFlight:
      type: object
      properties:
        flightId:
          type: string
          description: The ID associated with the flight.
        startDateTime:
          type: string
          description: The start date of the flight.
          format: date-time
        endDateTime:
          type: string
          format: date-time
        budget:
          $ref: '#/components/schemas/Budget'
      required:
        - budget
        - endDateTime
        - flightId
        - startDateTime
    CampaignGoalFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/Goal'
          maxItems: 3
          minItems: 0
      required:
        - include
    CampaignMarketplaceScopeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceScope'
          maxItems: 1
          minItems: 0
      required:
        - include
    CampaignMultiStatusResponseWithPartialErrors:
      type: object
      properties:
        success:
          type: array
          items:
            $ref: '#/components/schemas/CampaignMultiStatusSuccess'
          maxItems: 1000
          minItems: 0
        partialSuccess:
          type: array
          items:
            $ref: '#/components/schemas/CampaignPartialIndex'
          maxItems: 1000
          minItems: 0
        error:
          type: array
          items:
            $ref: '#/components/schemas/ErrorsIndex'
          maxItems: 1000
          minItems: 0
    CampaignMultiStatusSuccess:
      type: object
      properties:
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        campaign:
          $ref: '#/components/schemas/Campaign'
      required:
        - campaign
        - index
    CampaignNameFilter:
      type: object
      properties:
        queryTermMatchType:
          $ref: '#/components/schemas/CampaignNameFilterType'
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    CampaignNameFilterType:
      type: string
      enum:
        - EXACT_MATCH
        - BROAD_MATCH
    CampaignOptimizations:
      type: object
      properties:
        bidSettings:
          $ref: '#/components/schemas/BidSettings'
        goalSettings:
          $ref: '#/components/schemas/GoalSettings'
        budgetSettings:
          $ref: '#/components/schemas/BudgetSettings'
        primaryInventoryTypes:
          type: array
          items:
            $ref: '#/components/schemas/PrimaryInventoryType'
          maxItems: 10
          minItems: 0
          description: Primary inventory type of the campaign for filtering KPIs and recommending tactics.
    CampaignPartialIndex:
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/Campaign'
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          minItems: 1
      required:
        - campaign
        - errors
        - index
    CampaignPortfolioIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    CampaignStateFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/State'
          maxItems: 3
          minItems: 0
      required:
        - include
    CampaignSuccessResponse:
      type: object
      properties:
        nextToken:
          type: string
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/Campaign'
          maxItems: 5000
          minItems: 0
    CampaignUpdate:
      type: object
      properties:
        skanAppId:
          type: string
        flights:
          type: array
          items:
            $ref: '#/components/schemas/UpdateCampaignFlight'
          maxItems: 10
          minItems: 0
        budgets:
          type: array
          items:
            $ref: '#/components/schemas/UpdateBudget'
          maxItems: 3
          minItems: 0
        tags:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTag'
          maxItems: 50
          minItems: 0
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        campaignId:
          type: string
          description: A unique identifier for a campaign.
        frequencies:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFrequency'
          maxItems: 10
          minItems: 0
        fees:
          type: array
          items:
            $ref: '#/components/schemas/UpdateFee'
          maxItems: 2
          minItems: 0
        endDateTime:
          type: string
          format: date-time
        portfolioId:
          type: string
        startDateTime:
          type: string
          format: date-time
        state:
          $ref: '#/components/schemas/UpdateStates'
        purchaseOrderNumber:
          type: string
        name:
          type: string
        optimizations:
          $ref: '#/components/schemas/UpdateCampaignOptimizations'
      required:
        - campaignId
    ContentCategoryTarget:
      type: object
      description: Target based on the category of content being viewed.
      properties:
        contentCategoryId:
          $ref: '#/components/schemas/MarketplaceStringValue'
      required:
        - contentCategoryId
    ContentGenre:
      type: string
      enum:
        - TALK_SHOW
        - MYSTERY
        - DOCUMENTARY
        - HISTORY
        - NEWS
        - MUSICAL
        - ADVENTURE
        - CRIME
        - FANTASY
        - REALITY_TV
        - COMEDY
        - SCIENCE_FICTION
        - SUPER_HERO
        - GENRE_NOT_AVAILABLE
        - THRILLER
        - WESTERN
        - ROMANCE
        - HORROR
        - BIOGRAPHY
        - ANIMATION
        - DRAMA
        - FILM_NOIR
        - SPORT
        - ACTION
        - GAME_SHOW
        - WAR
        - SHORT
        - FAMILY
    ContentGenreTarget:
      type: object
      description: Target based on the genre of content being viewed.
      properties:
        contentGenre:
          $ref: '#/components/schemas/ContentGenre'
      required:
        - contentGenre
    ContentInstreamPosition:
      type: string
      enum:
        - PRE_ROLL
        - MID_ROLL
        - POST_ROLL
        - UNKNOWN
    ContentInstreamPositionTarget:
      type: object
      description: Targets ads in the specified content instream position
      properties:
        instreamPosition:
          $ref: '#/components/schemas/ContentInstreamPosition'
      required:
        - instreamPosition
    ContentOutstreamPosition:
      type: string
      enum:
        - STANDALONE
        - ACCOMPANYING_CONTENT
        - INTERSTITIAL
        - UNKNOWN
    ContentOutstreamPositionTarget:
      type: object
      description: Targets ads in the specified content outstream position
      properties:
        outstreamPosition:
          $ref: '#/components/schemas/ContentOutstreamPosition'
      required:
        - outstreamPosition
    ContentRating:
      oneOf:
        - type: object
          title: dspContentRating
          properties:
            dspContentRating:
              $ref: '#/components/schemas/DspContentRating'
          required:
            - dspContentRating
        - type: object
          title: twitchContentRating
          properties:
            twitchContentRating:
              $ref: '#/components/schemas/TwitchContentRating'
          required:
            - twitchContentRating
    ContentRatingTarget:
      type: object
      description: Target based on the rating of content being viewed.
      properties:
        contentRatingType:
          $ref: '#/components/schemas/ContentRatingTypes'
        contentRatingTypeDetails:
          $ref: '#/components/schemas/ContentRating'
      required:
        - contentRatingType
        - contentRatingTypeDetails
    ContentRatingTypes:
      type: string
      enum:
        - DSP_CONTENT_RATING
        - TWITCH_CONTENT_RATING
    ContentTooLargeResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    CostType:
      type: string
      enum:
        - CPC
        - VCPM
    CreateAdGroupBid:
      type: object
      properties:
        defaultBid:
          type: number
          description: The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.
          format: double
        baseBid:
          type: number
          description: The lower bound bid used for the ads in the ad group.
          format: double
        maxAverageBid:
          type: number
          description: The max average bid that will be targeted on the ad group across all of the bids (a single bid could be lower or higher that this number).
          format: double
    CreateAdGroupBidMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        bid:
          $ref: '#/components/schemas/CreateAdGroupBid'
      required:
        - bid
        - marketplace
    CreateAdGroupBidValue:
      type: object
      properties:
        bid:
          $ref: '#/components/schemas/CreateAdGroupBid'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateAdGroupBidMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The bid associated with the ad group at specified marketplace level. Either one of bid or marketplaceSettings should always be specified
    CreateAdGroupBudgetSettings:
      type: object
      properties:
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
        dailyMinSpendValue:
          type: number
          description: Denotes the daily minimum spend on the ad group in local currency.
          format: double
    CreateAdGroupRequest:
      type: object
      properties:
        adGroups:
          type: array
          items:
            $ref: '#/components/schemas/AdGroupCreate'
          maxItems: 1000
          minItems: 1
    CreateAdInitiationTarget:
      type: object
      description: Target based on how the video ad will be started.
      properties:
        videoInitiationType:
          $ref: '#/components/schemas/VideoInitiationType'
      required:
        - videoInitiationType
    CreateAdPlayerSizeTarget:
      type: object
      description: Target based on the size of the ad player.
      properties:
        adPlayerSize:
          $ref: '#/components/schemas/AdPlayerSize'
      required:
        - adPlayerSize
    CreateAdRequest:
      type: object
      properties:
        ads:
          type: array
          items:
            $ref: '#/components/schemas/AdCreate'
          maxItems: 1000
          minItems: 1
    CreateAdvertisedProductMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        productId:
          type: string
          description: The identifier of the product advertised.
      required:
        - marketplace
        - productId
    CreateAdvertisedProducts:
      type: object
      properties:
        productIdType:
          $ref: '#/components/schemas/ProductIdType'
        productId:
          type: string
          description: The identifier of the advertised product.
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateAdvertisedProductMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of advertised product selectively applied at the given marketplace level
      required:
        - productIdType
    CreateAdvertiserDomainList:
      type: object
      description: Targets domains based on list inherited from the advertiser.
      properties:
        inheritFromAdvertiser:
          type: boolean
          description: Set to TRUE to inherit domain list from advertiser.
      required:
        - inheritFromAdvertiser
    CreateAmazonViewability:
      type: object
      properties:
        viewabilityTier:
          $ref: '#/components/schemas/ViewabilityTier'
        includeUnmeasurableImpressions:
          type: boolean
          description: Must be false if viewabilityTier is set to ALL_TIERS. You can set to true to include impressions that can not be measured when a viewabilityTier other than ALL_TIERS is selected. We recommend setting to false if high viewability is your goal.
      required:
        - includeUnmeasurableImpressions
        - viewabilityTier
    CreateAppTarget:
      type: object
      description: Target based on user application.
      properties:
        appId:
          type: string
          description: The app identifier being targeted.
        appType:
          $ref: '#/components/schemas/AppType'
      required:
        - appId
        - appType
    CreateAudienceSegment:
      type: object
      properties:
        audienceId:
          type: string
          description: This is an Audience identifier vended by Audience Discovery.
        audienceSegmentType:
          $ref: '#/components/schemas/AudienceSegmentType'
      required:
        - audienceId
        - audienceSegmentType
    CreateAudienceTarget:
      type: object
      description: Target based on a specified audience ID.
      properties:
        acrossGroupOperator:
          $ref: '#/components/schemas/AcrossGroupOperator'
        groupId:
          type: string
          description: 'The string identifying a group of audiences. Only numbers formatted as strings are accepted (e.g. ''1''). To add audiences to a new group, choose any string not currently being used on this ad group. To add audiences to an existing group, use the existing groupId from this ad group. You may specify up to 10 include groups and 1 exclude group.'
        inGroupOperator:
          $ref: '#/components/schemas/InGroupOperator'
        audienceId:
          $ref: '#/components/schemas/CreateMarketplaceStringValue'
      required:
        - audienceId
    CreateAutoCreationSettings:
      type: object
      properties:
        autoCreateTargets:
          type: boolean
          description: Gives Amazon permission to automatically create targets associated with the campaign based on the products being advertised.
    CreateBidAdjustments:
      type: object
      properties:
        placementBidAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/CreatePlacementBidAdjustment'
          maxItems: 4
          minItems: 0
          description: Bid adjustments based on ad placements.
        shopperCohortBidAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/CreateShopperCohortBidAdjustment'
          maxItems: 2
          minItems: 0
          description: Bid Adjustments based on shopper cohorts.
    CreateBidSettings:
      type: object
      properties:
        bidStrategy:
          $ref: '#/components/schemas/BidStrategy'
        bidAdjustments:
          $ref: '#/components/schemas/CreateBidAdjustments'
    CreateBudget:
      type: object
      properties:
        recurrenceTimePeriod:
          $ref: '#/components/schemas/Recurrence'
        budgetType:
          $ref: '#/components/schemas/BudgetType'
        budgetValue:
          $ref: '#/components/schemas/CreateBudgetValue'
      required:
        - budgetType
        - budgetValue
        - recurrenceTimePeriod
    CreateBudgetSettings:
      type: object
      properties:
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
        offAmazonBudgetControlStrategy:
          $ref: '#/components/schemas/OffAmazonBudgetControlStrategy'
    CreateBudgetValue:
      oneOf:
        - type: object
          title: monetaryBudgetValue
          properties:
            monetaryBudgetValue:
              $ref: '#/components/schemas/CreateMonetaryBudgetValue'
          required:
            - monetaryBudgetValue
    CreateCampaignFlight:
      type: object
      properties:
        flightId:
          type: string
          description: The ID associated with the flight.
        startDateTime:
          type: string
          description: The start date of the flight.
          format: date-time
        endDateTime:
          type: string
          format: date-time
        budget:
          $ref: '#/components/schemas/CreateBudget'
      required:
        - budget
        - endDateTime
        - flightId
        - startDateTime
    CreateCampaignOptimizations:
      type: object
      properties:
        bidSettings:
          $ref: '#/components/schemas/CreateBidSettings'
        goalSettings:
          $ref: '#/components/schemas/CreateGoalSettings'
        budgetSettings:
          $ref: '#/components/schemas/CreateBudgetSettings'
        primaryInventoryTypes:
          type: array
          items:
            $ref: '#/components/schemas/PrimaryInventoryType'
          maxItems: 10
          minItems: 0
          description: Primary inventory type of the campaign for filtering KPIs and recommending tactics.
    CreateCampaignRequest:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignCreate'
          maxItems: 1000
          minItems: 1
    CreateContentCategoryTarget:
      type: object
      description: Target based on the category of content being viewed.
      properties:
        contentCategoryId:
          $ref: '#/components/schemas/CreateMarketplaceStringValue'
      required:
        - contentCategoryId
    CreateContentGenreTarget:
      type: object
      description: Target based on the genre of content being viewed.
      properties:
        contentGenre:
          $ref: '#/components/schemas/ContentGenre'
      required:
        - contentGenre
    CreateContentInstreamPositionTarget:
      type: object
      description: Targets ads in the specified content instream position
      properties:
        instreamPosition:
          $ref: '#/components/schemas/ContentInstreamPosition'
      required:
        - instreamPosition
    CreateContentOutstreamPositionTarget:
      type: object
      description: Targets ads in the specified content outstream position
      properties:
        outstreamPosition:
          $ref: '#/components/schemas/ContentOutstreamPosition'
      required:
        - outstreamPosition
    CreateContentRating:
      oneOf:
        - type: object
          title: dspContentRating
          properties:
            dspContentRating:
              $ref: '#/components/schemas/CreateDspContentRating'
          required:
            - dspContentRating
        - type: object
          title: twitchContentRating
          properties:
            twitchContentRating:
              $ref: '#/components/schemas/CreateTwitchContentRating'
          required:
            - twitchContentRating
    CreateContentRatingTarget:
      type: object
      description: Target based on the rating of content being viewed.
      properties:
        contentRatingType:
          $ref: '#/components/schemas/ContentRatingTypes'
        contentRatingTypeDetails:
          $ref: '#/components/schemas/CreateContentRating'
      required:
        - contentRatingType
        - contentRatingTypeDetails
    CreateCreative:
      oneOf:
        - type: object
          title: productCollectionCreative
          properties:
            productCollectionCreative:
              $ref: '#/components/schemas/CreateProductCollectionCreative'
          required:
            - productCollectionCreative
        - type: object
          title: videoCreative
          properties:
            videoCreative:
              $ref: '#/components/schemas/CreateVideoCreative'
          required:
            - videoCreative
        - type: object
          title: storeSpotlightCreative
          properties:
            storeSpotlightCreative:
              $ref: '#/components/schemas/CreateStoreSpotlightCreative'
          required:
            - storeSpotlightCreative
        - type: object
          title: productCreative
          properties:
            productCreative:
              $ref: '#/components/schemas/CreateProductCreative'
          required:
            - productCreative
    CreateDVBrandSafetyContentCategoriesWithRiskMap:
      type: object
      description: 'A map from content categories to risk level to exclude from targeting. Available keys are: [ADULT_CONTENT, ALCOHOL, CRIME, DEATH_INJURIES, DISASTER_AVIATION, DISASTER_MAN_MADE, DISASTER_NATURAL, DISASTER_TERRORIST_EVENTS, DISASTER_VEHICLE, HATE_SPEECH, PROFANITY, SUBSTANCE_ABUSE, TOBACCO_ECIGARETTES, VIOLENCE_EXTREME_GRAPHIC].'
      properties:
        key:
          type: string
        value:
          $ref: '#/components/schemas/BrandSuitabilityRiskLevelType'
      required:
        - key
        - value
    CreateDayPartTarget:
      type: object
      description: Target based on time of day.
      properties:
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        timeOfDay:
          $ref: '#/components/schemas/CreateTimeOfDay'
      required:
        - dayOfWeek
        - timeOfDay
    CreateDeviceTarget:
      type: object
      description: Target based on user device.
      properties:
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        mobileDevice:
          $ref: '#/components/schemas/MobileDevice'
        mobileEnvironment:
          $ref: '#/components/schemas/MobileEnvironment'
        deviceOrientation:
          $ref: '#/components/schemas/DeviceOrientation'
        mobileOs:
          $ref: '#/components/schemas/MobileOs'
      required:
        - deviceType
    CreateDomainFileTarget:
      type: object
      description: Targets domains based on list provided via file upload.
      properties:
        domainFileName:
          type: string
          description: The name of the file.
        domainFileUrl:
          type: string
          description: The file containing the domains uploaded. It expires in one hour.
        domainFileKey:
          type: string
          description: The URL of the domain to target.
    CreateDomainListTarget:
      type: object
      description: Targets domains based on an existing domain list.
      properties:
        domainListId:
          type: string
          description: The ID of the domain list to target.
      required:
        - domainListId
    CreateDomainNameTarget:
      type: object
      description: Targets domains based on URL.
      properties:
        domainName:
          type: string
          description: The URL of the domain to target.
      required:
        - domainName
    CreateDomainTarget:
      type: object
      description: Target based on a specified domain.
      properties:
        domainTargetType:
          $ref: '#/components/schemas/DomainTargetTypes'
        domainTargetDetails:
          $ref: '#/components/schemas/CreateDomainTargetDetails'
      required:
        - domainTargetDetails
        - domainTargetType
    CreateDomainTargetDetails:
      oneOf:
        - type: object
          title: advertiserDomainList
          properties:
            advertiserDomainList:
              $ref: '#/components/schemas/CreateAdvertiserDomainList'
          required:
            - advertiserDomainList
        - type: object
          title: domainListTarget
          properties:
            domainListTarget:
              $ref: '#/components/schemas/CreateDomainListTarget'
          required:
            - domainListTarget
        - type: object
          title: domainFileTarget
          properties:
            domainFileTarget:
              $ref: '#/components/schemas/CreateDomainFileTarget'
          required:
            - domainFileTarget
        - type: object
          title: domainNameTarget
          properties:
            domainNameTarget:
              $ref: '#/components/schemas/CreateDomainNameTarget'
          required:
            - domainNameTarget
    CreateDoubleVerifyAuthenticAttention:
      type: object
      properties:
        universalAttention:
          type: boolean
          description: One omni-channel segment that is informed by data from all DV campaigns to help avoid serving ads on generally poor performing apps and domains.
      required:
        - universalAttention
    CreateDoubleVerifyAuthenticBrandSafety:
      type: object
      properties:
        doubleVerifySegmentId:
          type: string
      required:
        - doubleVerifySegmentId
    CreateDoubleVerifyBrandSafety:
      type: object
      properties:
        excludeAppsWithInsufficientRating:
          type: boolean
          description: Set to true to exclude unofficial apps or apps with insufficient user ratings (<100 lifetime).
        appStarRating:
          $ref: '#/components/schemas/DVBrandSafetyAppStarRatingType'
        unknownContent:
          type: boolean
          description: Set to true to exclude unknown content.
        contentCategoriesWithRisk:
          type: array
          items:
            $ref: '#/components/schemas/CreateDVBrandSafetyContentCategoriesWithRiskMap'
          maxItems: 50
          minItems: 0
        contentCategories:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyContentCategoryType'
          maxItems: 50
          minItems: 0
          description: A list of content categories to exclude from targeting.
        appAgeRating:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyAppAgeRatingType'
          maxItems: 50
          minItems: 0
          description: 'A list of app age ratings to be used for excluding apps. For example, TEENS_12_PLUS will only exclude apps with content rated for everyone ages 12 and over. UNKNOWN will exclude apps with content unrated or unknown to Double Verify.'
      required:
        - appStarRating
        - excludeAppsWithInsufficientRating
        - unknownContent
    CreateDoubleVerifyCustomContextualSegmentId:
      type: object
      properties:
        doubleVerifySegmentId:
          type: string
      required:
        - doubleVerifySegmentId
    CreateDoubleVerifyFraudInvalidTraffic:
      type: object
      properties:
        excludeImpressions:
          type: boolean
          description: Set to true to exclude impressions delivered to devices identified to be fraudulent or invalid.
        excludeAppsAndSites:
          $ref: '#/components/schemas/ExcludeAppsAndSitesType'
        blockAppAndSites:
          type: boolean
          description: Set to true to block applications and sites with insufficient historical fraud and invalid traffic statistics. This will not be applicable if ALLOW_ALL is chosen.
      required:
        - blockAppAndSites
        - excludeAppsAndSites
        - excludeImpressions
    CreateDoubleVerifyStandardDisplayBrandSafety:
      type: object
      properties:
        unknownContent:
          type: boolean
          description: Set to true to exclude unknown content.
        contentCategories:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyContentCategoryType'
          maxItems: 50
          minItems: 0
          description: A list of content categories to exclude from targeting.
        contentCategoriesWithRisk:
          type: array
          items:
            $ref: '#/components/schemas/CreateDVBrandSafetyContentCategoriesWithRiskMap'
          maxItems: 50
          minItems: 0
      required:
        - unknownContent
    CreateDoubleVerifyViewability:
      type: object
      properties:
        averageCompletionAndFullyViewableRateTargeting:
          $ref: '#/components/schemas/AverageCompletionAndFullyViewableRateTargetingType'
        brandExposureViewabilityTargeting:
          $ref: '#/components/schemas/BrandExposureViewabilityTargetingType'
        mrcViewabilityTargeting:
          $ref: '#/components/schemas/MrcViewabilityTargetingType'
        includeUnmeasurableImpressions:
          type: boolean
          description: Set to true to include impressions where impressions can't be measured.
      required:
        - averageCompletionAndFullyViewableRateTargeting
        - brandExposureViewabilityTargeting
        - includeUnmeasurableImpressions
        - mrcViewabilityTargeting
    CreateDspContentRating:
      type: object
      properties:
        dspContentRating:
          $ref: '#/components/schemas/DspContentRatingEnum'
      required:
        - dspContentRating
    CreateFee:
      type: object
      properties:
        thirdPartyProvider:
          $ref: '#/components/schemas/FeesThirdPartyProvider'
        addToBudgetSpentAmount:
          type: boolean
          description: 'Applies only to THIRD_PARTY_APPLIED_FEE. When set to true, third-party applied fees are are added on top of the total ad group budget spent amount in reports.'
        feeValue:
          type: number
          description: 'The fee amount expressed as the feeValueType. AMAZON_AUDIENCE_FEE AND THIRD_PARTY_AUDIENCE_FEE is in the currency of the marketplace. All other CPM based fees are in the currency of the advertiser. For percentages, 100 represents 100%.'
          format: double
        feeValueType:
          $ref: '#/components/schemas/FeeValueType'
        feeType:
          $ref: '#/components/schemas/FeeType'
      required:
        - feeType
        - feeValue
        - feeValueType
    CreateFoldPositionTarget:
      type: object
      description: Targets ads in the specified fold position
      properties:
        foldPosition:
          $ref: '#/components/schemas/FoldPosition'
      required:
        - foldPosition
    CreateFrequency:
      type: object
      properties:
        frequencyTargetingSetting:
          $ref: '#/components/schemas/FrequencyTargetingSetting'
        frequencyType:
          $ref: '#/components/schemas/FrequencyType'
        timeCount:
          type: integer
          description: The value associated with the time and unit of time for this frequency cap.
          format: int32
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
        eventMaxCount:
          type: integer
          description: The maximum number of times an EventType is served per user. Required when frequencyType = CAPPED.
          format: int32
      required:
        - frequencyType
    CreateGlobalStoreSettings:
      type: object
      properties:
        catalogSourceMarketplace:
          $ref: '#/components/schemas/Marketplace'
    CreateGoalSettings:
      type: object
      properties:
        goal:
          $ref: '#/components/schemas/Goal'
        kpiValue:
          type: number
          description: The value of the KPI that the campaign is working to optimize.
          format: double
      required:
        - goal
    CreateIntegralAdScienceBrandSafety:
      type: object
      properties:
        iasBrandSafetyIllegalDownloads:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyGambling:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        excludeContent:
          type: boolean
          description: Set to true to exclude content that Integral Ad Science is not able to rate.
        iasBrandSafetyIllegalDrugs:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyOffensiveLanguage:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyViolence:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyHateSpeech:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyAdult:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyAlcohol:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
      required:
        - excludeContent
        - iasBrandSafetyAdult
        - iasBrandSafetyAlcohol
        - iasBrandSafetyGambling
        - iasBrandSafetyHateSpeech
        - iasBrandSafetyIllegalDownloads
        - iasBrandSafetyIllegalDrugs
        - iasBrandSafetyOffensiveLanguage
        - iasBrandSafetyViolence
    CreateIntegralAdScienceContextualAvoidance:
      type: object
      properties:
        avoidanceSegments:
          type: array
          items:
            type: string
          maxItems: 200
          minItems: 0
          description: The unique identifier of the IAS contextual avoidance segment
    CreateIntegralAdScienceContextualTargeting:
      type: object
      properties:
        topicalSegments:
          type: array
          items:
            type: string
          maxItems: 200
          minItems: 0
          description: The unique identifier of the IAS contextual topical targeting segment
        verticalSegments:
          type: array
          items:
            type: string
          maxItems: 200
          minItems: 0
          description: The unique identifier of the IAS contextual vertical targeting segment
    CreateIntegralAdScienceFraudInvalidTraffic:
      type: object
      properties:
        targetSetting:
          $ref: '#/components/schemas/IASFraudInvalidTrafficType'
      required:
        - targetSetting
    CreateIntegralAdScienceQualitySync:
      type: object
      properties:
        segmentId:
          type: string
    CreateIntegralAdScienceViewability:
      type: object
      description: The IAS viewability standard.
      properties:
        standard:
          $ref: '#/components/schemas/IASViewabilityStandardType'
        viewabilityTargeting:
          $ref: '#/components/schemas/ViewabilityTierType'
      required:
        - standard
        - viewabilityTargeting
    CreateInventorySourceTarget:
      type: object
      description: Target based on the source of the inventory.
      properties:
        inventorySourceType:
          $ref: '#/components/schemas/InventorySourceType'
        inventorySourceId:
          $ref: '#/components/schemas/CreateMarketplaceStringValue'
      required:
        - inventorySourceId
        - inventorySourceType
    CreateKeywordMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        keyword:
          type: string
          description: The customer search term or text to target
        nativeLanguageKeyword:
          type: string
          description: The unlocalized keyword text in the preferred locale of the advertiser
      required:
        - keyword
        - marketplace
    CreateKeywordTarget:
      type: object
      description: Targets a specific customer search term.
      properties:
        matchType:
          $ref: '#/components/schemas/KeywordMatchType'
        nativeLanguageLocale:
          $ref: '#/components/schemas/LanguageLocale'
        keyword:
          $ref: '#/components/schemas/CreateKeywordValue'
      required:
        - keyword
        - matchType
    CreateKeywordValue:
      type: object
      properties:
        keyword:
          type: string
          description: 'The customer search term or text to target. The keyword value should always be provided, either here or in the marketplace settings'
        nativeLanguageKeyword:
          type: string
          description: The unlocalized keyword text in the preferred locale of the advertiser.
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateKeywordMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The marketplace specific keyword values.
    CreateLocationTarget:
      type: object
      description: Target based on geographic location.
      properties:
        locationId:
          type: string
          description: The ID of the geographic location to target.
      required:
        - locationId
    CreateMarketplaceStringValue:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value. Either the default value or the marketplace settings should always be specified
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateStringMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The marketplace specific value pairs. Either the default value or the marketplace settings should always be specified
    CreateMonetaryBudget:
      type: object
      properties:
        value:
          type: number
          description: The monetary amount of the budget cap in the given currency.
          format: double
      required:
        - value
    CreateMonetaryBudgetMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        monetaryBudget:
          $ref: '#/components/schemas/CreateMonetaryBudget'
      required:
        - marketplace
        - monetaryBudget
    CreateMonetaryBudgetValue:
      type: object
      properties:
        monetaryBudget:
          $ref: '#/components/schemas/CreateMonetaryBudget'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateMonetaryBudgetMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of Monetary Budget values selectively applied at the given marketplace level
    CreateNativeContentPositionTarget:
      type: object
      description: Targets ads to a specific native content position
      properties:
        nativePosition:
          $ref: '#/components/schemas/NativeContentPosition'
      required:
        - nativePosition
    CreateNewsGuardBrandGuardMisinformationSafety:
      type: object
      properties:
        avoidanceList:
          type: array
          items:
            $ref: '#/components/schemas/NewsGuardBrandGuardMisinformationSafetyType'
          maxItems: 20
          minItems: 0
          description: The unique identifiers of misinformation targets
    CreateNewsGuardBrandGuardTrustedNewsTargeting:
      type: object
      description: Only applicable for Web supply.
      properties:
        targetingList:
          type: array
          items:
            $ref: '#/components/schemas/NewsGuardBrandGuardTrustedNewsTargetingType'
          maxItems: 15
          minItems: 0
          description: The unique identifiers of trusted news targets
    CreateOptimization:
      type: object
      properties:
        bidStrategy:
          $ref: '#/components/schemas/BidStrategy'
        budgetSettings:
          $ref: '#/components/schemas/CreateAdGroupBudgetSettings'
    CreatePacing:
      type: object
      properties:
        deliveryProfile:
          $ref: '#/components/schemas/DeliveryProfile'
        catchUpBoostPercentage:
          type: integer
          description: 'Available when deliveryProfile is ''EVENLY''. A catch up boost offsets any drops that may occur while ad groups are delivering during weekends, holidays, or other busy time periods. A 300 boost means ad groups can deliver up to three times faster than they normally would within their budget to catch up. A 0 means no boost will be applied. The only acceptable values are 0, 200, 300, and 400.'
          format: int32
    CreatePixalateFraudInvalidTraffic:
      type: object
      properties:
        excludeIpAddressAndUserAgents:
          type: boolean
          description: Set to true to exclude traffic from IPV4 and IPV6 addresses and user agents identified to be fraudulent or invalid.
        excludeOttAndMobileDevices:
          type: boolean
          description: Set to true to exclude traffic from OTT and Mobile devices identified to be fraudulent or invalid.
        excludeRemovedAppsFromAppStores:
          type: boolean
          description: Set to true to exlude traffic from Apps that have been removed from the google play and apple app stores in the last 6 months.
        excludeAppsAndDomains:
          type: boolean
          description: Set to true to exclude traffic from Apps and Domains identified to be fraudulent or invalid.
      required:
        - excludeAppsAndDomains
        - excludeIpAddressAndUserAgents
        - excludeOttAndMobileDevices
        - excludeRemovedAppsFromAppStores
    CreatePlacementBidAdjustment:
      type: object
      properties:
        percentage:
          type: integer
          description: The selection of the percentage change associated with a given placement and bid adjustment settings.
          format: int32
        placement:
          $ref: '#/components/schemas/Placement'
      required:
        - percentage
        - placement
    CreateProductCategoryRefinement:
      type: object
      properties:
        productPriceLessThan:
          type: number
          description: Refinement to target products with a price less than the value within the product category.
          format: double
        productAgeRangeId:
          type: string
          description: The age range ID to target.
        productRatingGreaterThan:
          type: number
          description: Refinement to target products with a rating greater than the value within the product category.
          format: double
        productBrandId:
          type: string
          description: The brand ID to target.
        productRatingLessThan:
          type: number
          description: Refinement to target products with a rating less than the value within the product category.
          format: double
        productPriceGreaterThan:
          type: number
          description: Refinement to target products with a price greater than the value within the product category.
          format: double
        productCategoryId:
          type: string
          description: The product category ID to target.
        productPrimeShippingEligible:
          type: boolean
          description: Target based on if a product is Prime-shipping eligible.
    CreateProductCategoryRefinementMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        productCategoryRefinement:
          $ref: '#/components/schemas/CreateProductCategoryRefinement'
      required:
        - marketplace
        - productCategoryRefinement
    CreateProductCategoryRefinementValue:
      type: object
      properties:
        productCategoryRefinement:
          $ref: '#/components/schemas/CreateProductCategoryRefinement'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductCategoryRefinementMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: Marketplace specific product category refinements. Either the value or the marketplaceSettings should always be specified
    CreateProductCategoryTarget:
      type: object
      description: Targets a specific customer search term.
      properties:
        productCategoryRefinement:
          $ref: '#/components/schemas/CreateProductCategoryRefinementValue'
        productGenreRefinement:
          $ref: '#/components/schemas/CreateProductGenreRefinement'
      required:
        - productCategoryRefinement
    CreateProductCollectionCreative:
      type: object
      description: An ad creative that contains multiple products and a custom image.
    CreateProductCreative:
      type: object
      description: An ad with a creative built based on the product being advertised.
      properties:
        headline:
          type: string
          description: The headline/custom text associated with the ad creative.
        globalStoreSettings:
          $ref: '#/components/schemas/CreateGlobalStoreSettings'
        advertisedProduct:
          $ref: '#/components/schemas/CreateAdvertisedProducts'
      required:
        - advertisedProduct
    CreateProductGenreRefinement:
      type: object
      properties:
        productGenreId:
          type: string
          description: The product genre ID to target.
      required:
        - productGenreId
    CreateProductMarketplaceSetting:
      type: object
      properties:
        productId:
          type: string
          description: The product id applicable at the specified marketplace.
        marketplace:
          $ref: '#/components/schemas/Marketplace'
      required:
        - marketplace
        - productId
    CreateProductTarget:
      type: object
      description: Targets a specific product.
      properties:
        productIdType:
          $ref: '#/components/schemas/ProductIdType'
        matchType:
          $ref: '#/components/schemas/ProductMatchType'
        product:
          $ref: '#/components/schemas/CreateProductValue'
      required:
        - matchType
        - product
        - productIdType
    CreateProductValue:
      type: object
      properties:
        productId:
          type: string
          description: The product identifier. Either the product id or the marketplace settings should always be specified
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateProductMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The product ids at specific marketplace level. Either the product id or the marketplace settings should always be specified
    CreateShopperCohortBidAdjustment:
      type: object
      properties:
        percentage:
          type: integer
          description: The selection of the percentage change associated with a given shopper cohort and bid adjustment settings.
          format: int32
        shopperCohortType:
          $ref: '#/components/schemas/ShopperCohortType'
        audienceSegments:
          type: array
          items:
            $ref: '#/components/schemas/CreateAudienceSegment'
          maxItems: 2
          minItems: 0
          description: Audience segments associated with bid adjustment settings. Required when AUDIENCE_SEGMENT is used for shopperCohortType.
      required:
        - percentage
        - shopperCohortType
    CreateStateMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        state:
          $ref: '#/components/schemas/State'
      required:
        - marketplace
        - state
    CreateStates:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateStateMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of State values selectively applied at the given marketplace level
      required:
        - state
    CreateStoreSpotlightCreative:
      type: object
      description: An ad creative that contains ASINs within a brand Store.
    CreateStringMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        value:
          type: string
          description: The value applicable at the specified marketplace.
      required:
        - marketplace
        - value
    CreateTag:
      type: object
      properties:
        key:
          type: string
          description: A custom key value pair entered by the advertiser.
        value:
          type: string
          description: A custom key value pair entered by the advertiser.
      required:
        - key
        - value
    CreateTargetBid:
      type: object
      properties:
        bid:
          type: number
          description: The maximum bid for a target.
          format: double
      required:
        - bid
    CreateTargetBidMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        bid:
          $ref: '#/components/schemas/CreateTargetBid'
      required:
        - bid
        - marketplace
    CreateTargetBidValue:
      type: object
      properties:
        bid:
          $ref: '#/components/schemas/CreateTargetBid'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/CreateTargetBidMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The bid associated with the target at specified marketplace level. Either one of bid or marketplaceSettings should always be specified
    CreateTargetDetails:
      oneOf:
        - type: object
          title: keywordTarget
          properties:
            keywordTarget:
              $ref: '#/components/schemas/CreateKeywordTarget'
          required:
            - keywordTarget
        - type: object
          title: themeTarget
          properties:
            themeTarget:
              $ref: '#/components/schemas/CreateThemeTarget'
          required:
            - themeTarget
        - type: object
          title: deviceTarget
          properties:
            deviceTarget:
              $ref: '#/components/schemas/CreateDeviceTarget'
          required:
            - deviceTarget
        - type: object
          title: nativeContentPositionTarget
          properties:
            nativeContentPositionTarget:
              $ref: '#/components/schemas/CreateNativeContentPositionTarget'
          required:
            - nativeContentPositionTarget
        - type: object
          title: contentOutstreamPositionTarget
          properties:
            contentOutstreamPositionTarget:
              $ref: '#/components/schemas/CreateContentOutstreamPositionTarget'
          required:
            - contentOutstreamPositionTarget
        - type: object
          title: audienceTarget
          properties:
            audienceTarget:
              $ref: '#/components/schemas/CreateAudienceTarget'
          required:
            - audienceTarget
        - type: object
          title: thirdPartyTarget
          properties:
            thirdPartyTarget:
              $ref: '#/components/schemas/CreateThirdPartyTarget'
          required:
            - thirdPartyTarget
        - type: object
          title: locationTarget
          properties:
            locationTarget:
              $ref: '#/components/schemas/CreateLocationTarget'
          required:
            - locationTarget
        - type: object
          title: contentCategoryTarget
          properties:
            contentCategoryTarget:
              $ref: '#/components/schemas/CreateContentCategoryTarget'
          required:
            - contentCategoryTarget
        - type: object
          title: inventorySourceTarget
          properties:
            inventorySourceTarget:
              $ref: '#/components/schemas/CreateInventorySourceTarget'
          required:
            - inventorySourceTarget
        - type: object
          title: domainTarget
          properties:
            domainTarget:
              $ref: '#/components/schemas/CreateDomainTarget'
          required:
            - domainTarget
        - type: object
          title: productCategoryTarget
          properties:
            productCategoryTarget:
              $ref: '#/components/schemas/CreateProductCategoryTarget'
          required:
            - productCategoryTarget
        - type: object
          title: adPlayerSizeTarget
          properties:
            adPlayerSizeTarget:
              $ref: '#/components/schemas/CreateAdPlayerSizeTarget'
          required:
            - adPlayerSizeTarget
        - type: object
          title: contentGenreTarget
          properties:
            contentGenreTarget:
              $ref: '#/components/schemas/CreateContentGenreTarget'
          required:
            - contentGenreTarget
        - type: object
          title: dayPartTarget
          properties:
            dayPartTarget:
              $ref: '#/components/schemas/CreateDayPartTarget'
          required:
            - dayPartTarget
        - type: object
          title: appTarget
          properties:
            appTarget:
              $ref: '#/components/schemas/CreateAppTarget'
          required:
            - appTarget
        - type: object
          title: foldPositionTarget
          properties:
            foldPositionTarget:
              $ref: '#/components/schemas/CreateFoldPositionTarget'
          required:
            - foldPositionTarget
        - type: object
          title: productTarget
          properties:
            productTarget:
              $ref: '#/components/schemas/CreateProductTarget'
          required:
            - productTarget
        - type: object
          title: contentInstreamPositionTarget
          properties:
            contentInstreamPositionTarget:
              $ref: '#/components/schemas/CreateContentInstreamPositionTarget'
          required:
            - contentInstreamPositionTarget
        - type: object
          title: videoContentDurationTarget
          properties:
            videoContentDurationTarget:
              $ref: '#/components/schemas/CreateVideoContentDurationTarget'
          required:
            - videoContentDurationTarget
        - type: object
          title: adInitiationTarget
          properties:
            adInitiationTarget:
              $ref: '#/components/schemas/CreateAdInitiationTarget'
          required:
            - adInitiationTarget
        - type: object
          title: contentRatingTarget
          properties:
            contentRatingTarget:
              $ref: '#/components/schemas/CreateContentRatingTarget'
          required:
            - contentRatingTarget
        - type: object
          title: videoAdFormatTarget
          properties:
            videoAdFormatTarget:
              $ref: '#/components/schemas/CreateVideoAdFormatTarget'
          required:
            - videoAdFormatTarget
    CreateTargetRequest:
      type: object
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/TargetCreate'
          maxItems: 1000
          minItems: 1
    CreateTargetingSettings:
      type: object
      properties:
        videoCompletionTier:
          $ref: '#/components/schemas/VideoCompletionTier'
        targetedPGDealId:
          type: string
          description: 'DealId to be targeted by the Ad Group being created. If you are creating an ad group targeting a programmatic guaranteed deal, the deal can be provided here.'
        timeZoneType:
          $ref: '#/components/schemas/TimeZoneType'
        tacticsConvertersExclusionType:
          $ref: '#/components/schemas/TacticsConvertersExclusionType'
        defaultAudienceTargetingMatchType:
          $ref: '#/components/schemas/DefaultAudienceTargetingMatchType'
        userLocationSignal:
          $ref: '#/components/schemas/UserLocationSignal'
        enableLanguageTargeting:
          type: boolean
          description: 'If set to true, creatives will only target supply where the content language matches the creative language.'
        amazonViewability:
          $ref: '#/components/schemas/CreateAmazonViewability'
    CreateThemeTarget:
      type: object
      description: Theme targets let advertisers select high-performing targets based on a common theme.
      properties:
        matchType:
          $ref: '#/components/schemas/ThemeMatchType'
      required:
        - matchType
    CreateThirdPartyTarget:
      type: object
      properties:
        thirdPartyTargetType:
          $ref: '#/components/schemas/ThirdPartyTargetType'
        thirdPartyTargetDetails:
          $ref: '#/components/schemas/CreateThirdPartyTargetDetails'
      required:
        - thirdPartyTargetDetails
        - thirdPartyTargetType
    CreateThirdPartyTargetDetails:
      oneOf:
        - type: object
          title: integralAdScienceContextualTargeting
          properties:
            integralAdScienceContextualTargeting:
              $ref: '#/components/schemas/CreateIntegralAdScienceContextualTargeting'
          required:
            - integralAdScienceContextualTargeting
        - type: object
          title: doubleVerifyViewability
          properties:
            doubleVerifyViewability:
              $ref: '#/components/schemas/CreateDoubleVerifyViewability'
          required:
            - doubleVerifyViewability
        - type: object
          title: doubleVerifyFraudInvalidTraffic
          properties:
            doubleVerifyFraudInvalidTraffic:
              $ref: '#/components/schemas/CreateDoubleVerifyFraudInvalidTraffic'
          required:
            - doubleVerifyFraudInvalidTraffic
        - type: object
          title: newsGuardBrandGuardTrustedNewsTargeting
          properties:
            newsGuardBrandGuardTrustedNewsTargeting:
              $ref: '#/components/schemas/CreateNewsGuardBrandGuardTrustedNewsTargeting'
          required:
            - newsGuardBrandGuardTrustedNewsTargeting
        - type: object
          title: integralAdScienceQualitySync
          properties:
            integralAdScienceQualitySync:
              $ref: '#/components/schemas/CreateIntegralAdScienceQualitySync'
          required:
            - integralAdScienceQualitySync
        - type: object
          title: doubleVerifyAuthenticBrandSafety
          properties:
            doubleVerifyAuthenticBrandSafety:
              $ref: '#/components/schemas/CreateDoubleVerifyAuthenticBrandSafety'
          required:
            - doubleVerifyAuthenticBrandSafety
        - type: object
          title: integralAdScienceBrandSafety
          properties:
            integralAdScienceBrandSafety:
              $ref: '#/components/schemas/CreateIntegralAdScienceBrandSafety'
          required:
            - integralAdScienceBrandSafety
        - type: object
          title: integralAdScienceContextualAvoidance
          properties:
            integralAdScienceContextualAvoidance:
              $ref: '#/components/schemas/CreateIntegralAdScienceContextualAvoidance'
          required:
            - integralAdScienceContextualAvoidance
        - type: object
          title: doubleVerifyBrandSafety
          properties:
            doubleVerifyBrandSafety:
              $ref: '#/components/schemas/CreateDoubleVerifyBrandSafety'
          required:
            - doubleVerifyBrandSafety
        - type: object
          title: pixalateFraudInvalidTraffic
          properties:
            pixalateFraudInvalidTraffic:
              $ref: '#/components/schemas/CreatePixalateFraudInvalidTraffic'
          required:
            - pixalateFraudInvalidTraffic
        - type: object
          title: doubleVerifyStandardDisplayBrandSafety
          properties:
            doubleVerifyStandardDisplayBrandSafety:
              $ref: '#/components/schemas/CreateDoubleVerifyStandardDisplayBrandSafety'
          required:
            - doubleVerifyStandardDisplayBrandSafety
        - type: object
          title: doubleVerifyCustomContextualSegmentId
          properties:
            doubleVerifyCustomContextualSegmentId:
              $ref: '#/components/schemas/CreateDoubleVerifyCustomContextualSegmentId'
          required:
            - doubleVerifyCustomContextualSegmentId
        - type: object
          title: integralAdScienceViewability
          properties:
            integralAdScienceViewability:
              $ref: '#/components/schemas/CreateIntegralAdScienceViewability'
          required:
            - integralAdScienceViewability
        - type: object
          title: newsGuardBrandGuardMisinformationSafety
          properties:
            newsGuardBrandGuardMisinformationSafety:
              $ref: '#/components/schemas/CreateNewsGuardBrandGuardMisinformationSafety'
          required:
            - newsGuardBrandGuardMisinformationSafety
        - type: object
          title: integralAdScienceFraudInvalidTraffic
          properties:
            integralAdScienceFraudInvalidTraffic:
              $ref: '#/components/schemas/CreateIntegralAdScienceFraudInvalidTraffic'
          required:
            - integralAdScienceFraudInvalidTraffic
        - type: object
          title: doubleVerifyAuthenticAttention
          properties:
            doubleVerifyAuthenticAttention:
              $ref: '#/components/schemas/CreateDoubleVerifyAuthenticAttention'
          required:
            - doubleVerifyAuthenticAttention
    CreateTimeOfDay:
      type: object
      properties:
        startTime:
          type: string
          description: Selected start time
        endTime:
          type: string
          description: Selected end time
      required:
        - endTime
        - startTime
    CreateTwitchContentRating:
      type: object
      properties:
        twitchContentRating:
          $ref: '#/components/schemas/TwitchContentRatingEnum'
      required:
        - twitchContentRating
    CreateVideoAdFormatTarget:
      type: object
      description: Target based on the video ad format.
      properties:
        videoAdFormat:
          $ref: '#/components/schemas/VideoAdFormat'
      required:
        - videoAdFormat
    CreateVideoContentDurationTarget:
      type: object
      description: Targets ads to a specific video content duration
      properties:
        duration:
          $ref: '#/components/schemas/VideoContentDuration'
      required:
        - duration
    CreateVideoCreative:
      type: object
      description: An ad with a creative that includes a video.
    Creative:
      oneOf:
        - type: object
          title: productCollectionCreative
          properties:
            productCollectionCreative:
              $ref: '#/components/schemas/ProductCollectionCreative'
          required:
            - productCollectionCreative
        - type: object
          title: videoCreative
          properties:
            videoCreative:
              $ref: '#/components/schemas/VideoCreative'
          required:
            - videoCreative
        - type: object
          title: storeSpotlightCreative
          properties:
            storeSpotlightCreative:
              $ref: '#/components/schemas/StoreSpotlightCreative'
          required:
            - storeSpotlightCreative
        - type: object
          title: productCreative
          properties:
            productCreative:
              $ref: '#/components/schemas/ProductCreative'
          required:
            - productCreative
    CreativeRotationType:
      type: string
      enum:
        - RANDOM
        - WEIGHTED
    CurrencyCode:
      type: string
      enum:
        - MXP
        - BRL
        - NZD
        - AUD
        - CAD
        - CHF
        - TRY
        - CNY
        - EUR
        - NOK
        - USD
        - INR
        - JPY
        - PLN
        - MXN
        - SGD
        - EGP
        - DKK
        - NGN
        - GBP
        - AED
        - ZAR
        - SAR
        - SEK
    DVBrandSafetyAppAgeRatingType:
      type: string
      enum:
        - ADULTS_ONLY_18_PLUS
        - UNKNOWN
        - EVERYONE_4_PLUS
        - TWEENS_9_PLUS
        - TEENS_12_PLUS
        - MATURE_17_PLUS
    DVBrandSafetyAppStarRatingType:
      type: string
      description: App star rating to be used for excluding apps.
      enum:
        - APP_STAR_RATING_LT_2_POINT_5_STARS
        - APP_STAR_RATING_LT_3_POINT_5_STARS
        - APP_STAR_RATING_LT_4_STARS
        - APP_STAR_RATING_LT_2_STARS
        - APP_STAR_RATING_LT_4_POINT_5_STARS
        - APP_STAR_RATING_LT_3_STARS
        - APP_STAR_RATING_LT_1_POINT_5_STARS
        - ALLOW_ALL
    DVBrandSafetyContentCategoriesWithRiskMap:
      type: object
      description: 'A map from content categories to risk level to exclude from targeting. Available keys are: [ADULT_CONTENT, ALCOHOL, CRIME, DEATH_INJURIES, DISASTER_AVIATION, DISASTER_MAN_MADE, DISASTER_NATURAL, DISASTER_TERRORIST_EVENTS, DISASTER_VEHICLE, HATE_SPEECH, PROFANITY, SUBSTANCE_ABUSE, TOBACCO_ECIGARETTES, VIOLENCE_EXTREME_GRAPHIC].'
      properties:
        key:
          type: string
        value:
          $ref: '#/components/schemas/BrandSuitabilityRiskLevelType'
      required:
        - key
        - value
    DVBrandSafetyContentCategoryType:
      type: string
      enum:
        - INCENTIVIZED_MALWARE_CLUTTER
        - INFLAMMATORY_POLITICS_NEWS
        - UNMODERATED_UGC_FORUMS_IMAGES_VIDEO
        - EXTREME_GRAPHIC
        - AD_SERVER
        - OCCULT
        - NEGATIVE_NEWS_PHARMACEUTICAL
        - NEGATIVE_NEWS_FINANCIAL
        - GAMBLING
        - PIRACY_COPYRIGHT_INFRINGEMENT
        - NON_STANDARD_CONTENT_NON_ENGLISH
        - CULTS_SURVIVALISM
        - CELEBRITY_GOSSIP
        - NON_STANDARD_CONTENT_PARKING_PAGE
    DayOfWeek:
      type: string
      enum:
        - THURSDAY
        - TUESDAY
        - SATURDAY
        - FRIDAY
        - WEDNESDAY
        - SUNDAY
        - MONDAY
    DayPartTarget:
      type: object
      description: Target based on time of day.
      properties:
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        timeOfDay:
          $ref: '#/components/schemas/TimeOfDay'
      required:
        - dayOfWeek
        - timeOfDay
    DefaultAudienceTargetingMatchType:
      type: string
      enum:
        - SIMILAR
        - EXACT
    DeleteAdGroupRequest:
      type: object
      properties:
        adGroupIds:
          type: array
          items:
            type: string
          maxItems: 1000
          minItems: 1
    DeleteAdRequest:
      type: object
      properties:
        adIds:
          type: array
          items:
            type: string
          maxItems: 1000
          minItems: 1
    DeleteCampaignRequest:
      type: object
      properties:
        campaignIds:
          type: array
          items:
            type: string
          maxItems: 1000
          minItems: 1
    DeleteTargetRequest:
      type: object
      properties:
        targetIds:
          type: array
          items:
            type: string
          maxItems: 1000
          minItems: 1
    DeliveryProfile:
      type: string
      enum:
        - EVEN
        - PACE_AHEAD
        - ASAP
    DeliveryReason:
      type: string
      enum:
        - MODERATION_CONTENT_PROVOCATIVE_POLICY_VIOLATION
        - OTHER
        - TARGET_BLOCKED
        - AD_CREATION_IN_PROGRESS
        - BRAND_INELIGIBLE
        - CAMPAIGN_REJECTED
        - SECURITY_SCAN_PENDING_REVIEW
        - NOT_IN_POLICY
        - MODERATION_ADULT_SOFTLINES_POLICY_VIOLATION
        - PORTFOLIO_PAUSED
        - MODERATION_CONTENT_NUDITY_POLICY_VIOLATION
        - CAMPAIGN_ARCHIVED
        - MODERATION_GRAPHICAL_SEXUAL_IMAGES_POLICY_VIOLATION
        - ADVERTISER_OUT_OF_BUDGET
        - CREATIVE_REJECTED
        - MODERATION_LANGUAGE_OFFENSIVE_POLICY_VIOLATION
        - CAMPAIGN_PENDING_REVIEW
        - OUT_OF_REWARD_BUDGET
        - AD_GROUP_INCOMPLETE
        - MODERATION_CLAIM_WEIGHTLOSS_POLICY_VIOLATION
        - AD_INELIGIBLE
        - MODERATION_ERROR_404
        - CREATIVE_PENDING_REVIEW
        - AD_POLICING_PENDING_REVIEW
        - AD_MISSING_DECORATION
        - AD_CREATION_FAILED
        - MODERATION_ADULT_NOVELTY_POLICY_VIOLATION
        - AD_PAUSED
        - SECURITY_SCAN_REJECTED
        - ADVERTISER_ARCHIVED
        - PORTFOLIO_ARCHIVED
        - SPEND_LIMIT_EXCEEDED
        - AD_NOT_DELIVERING
        - AD_GROUP_LOW_BID
        - ADVERTISER_POLICING_PENDING_REVIEW
        - AD_GROUP_ARCHIVED
        - NOT_IN_BUYBOX
        - CAMPAIGN_PENDING_START_DATE
        - LANDING_PAGE_INELIGIBLE
        - TARGET_POLICING_SUSPENDED
        - AD_GROUP_POLICING_PENDING_REVIEW
        - ADVERTISER_PAUSED
        - ADVERTISER_INELIGIBLE
        - MODERATION_CONTENT_SMOKING_POLICY_VIOLATION
        - ADVERTISER_PAYMENT_FAILURE
        - AD_ARCHIVED
        - AD_MISSING_IMAGE
        - TARGET_PAUSED
        - PORTFOLIO_END_DATE_REACHED
        - MODERATION_CRITICAL_EVENTS_POLICY_VIOLATION
        - OUT_OF_STOCK
        - ADVERTISER_POLICING_SUSPENDED
        - CAMPAIGN_END_DATE_REACHED
        - NO_INVENTORY
        - CAMPAIGN_INCOMPLETE
        - MODERATION_NOT_COMPLIANT_TO_AD_POLICY
        - PORTFOLIO_OUT_OF_BUDGET
        - MODERATION_HFSS_PRODUCT_POLICY_VIOLATION
        - STATUS_UNAVAILABLE
        - MODERATION_SMOKING_RELATED_POLICY_VIOLATION
        - CAMPAIGN_OUT_OF_BUDGET
        - AD_GROUP_PENDING_REVIEW
        - AD_GROUP_REJECTED
        - NO_PURCHASABLE_OFFER
        - AD_GROUP_PAUSED
        - NOT_BUYABLE
        - PORTFOLIO_PENDING_START_DATE
        - CAMPAIGN_PAUSED
        - PIR_RULE_EXCLUDED
        - MODERATION_ADULT_PRODUCT_POLICY_VIOLATION
        - LANDING_PAGE_NOT_AVAILABLE
        - CREATIVE_MISSING_ASSET
        - TARGET_ARCHIVED
        - ADVERTISER_OUT_OF_PREPAY_BALANCE
        - AD_POLICING_SUSPENDED
    DeliveryStatus:
      type: string
      enum:
        - DELIVERING
        - NOT_DELIVERING
        - UNAVAILABLE
        - LIMITED
    DeviceOrientation:
      type: string
      enum:
        - PORTRAIT
        - LANDSCAPE
    DeviceTarget:
      type: object
      description: Target based on user device.
      properties:
        deviceType:
          $ref: '#/components/schemas/DeviceType'
        mobileDevice:
          $ref: '#/components/schemas/MobileDevice'
        mobileEnvironment:
          $ref: '#/components/schemas/MobileEnvironment'
        deviceOrientation:
          $ref: '#/components/schemas/DeviceOrientation'
        mobileOs:
          $ref: '#/components/schemas/MobileOs'
      required:
        - deviceType
    DeviceType:
      type: string
      enum:
        - DESKTOP
        - MOBILE
        - CONNECTED_TV
        - CONNECTED_DEVICE
    DomainFileTarget:
      type: object
      description: Targets domains based on list provided via file upload.
      properties:
        domainFileName:
          type: string
          description: The name of the file.
        domainFileUrl:
          type: string
          description: The file containing the domains uploaded. It expires in one hour.
        domainFileKey:
          type: string
          description: The URL of the domain to target.
    DomainListTarget:
      type: object
      description: Targets domains based on an existing domain list.
      properties:
        domainListId:
          type: string
          description: The ID of the domain list to target.
      required:
        - domainListId
    DomainNameTarget:
      type: object
      description: Targets domains based on URL.
      properties:
        domainName:
          type: string
          description: The URL of the domain to target.
      required:
        - domainName
    DomainTarget:
      type: object
      description: Target based on a specified domain.
      properties:
        domainTargetType:
          $ref: '#/components/schemas/DomainTargetTypes'
        domainTargetDetails:
          $ref: '#/components/schemas/DomainTargetDetails'
      required:
        - domainTargetDetails
        - domainTargetType
    DomainTargetDetails:
      oneOf:
        - type: object
          title: domainListTarget
          properties:
            domainListTarget:
              $ref: '#/components/schemas/DomainListTarget'
          required:
            - domainListTarget
        - type: object
          title: domainFileTarget
          properties:
            domainFileTarget:
              $ref: '#/components/schemas/DomainFileTarget'
          required:
            - domainFileTarget
        - type: object
          title: advertiserDomainList
          properties:
            advertiserDomainList:
              $ref: '#/components/schemas/AdvertiserDomainList'
          required:
            - advertiserDomainList
        - type: object
          title: domainNameTarget
          properties:
            domainNameTarget:
              $ref: '#/components/schemas/DomainNameTarget'
          required:
            - domainNameTarget
    DomainTargetTypes:
      type: string
      enum:
        - DOMAIN_LIST
        - DOMAIN_NAME
        - DOMAIN_FILE
        - ADVERTISER_DOMAIN_LIST
    DoubleVerifyAuthenticAttention:
      type: object
      properties:
        universalAttention:
          type: boolean
          description: One omni-channel segment that is informed by data from all DV campaigns to help avoid serving ads on generally poor performing apps and domains.
      required:
        - universalAttention
    DoubleVerifyAuthenticBrandSafety:
      type: object
      properties:
        doubleVerifySegmentId:
          type: string
      required:
        - doubleVerifySegmentId
    DoubleVerifyBrandSafety:
      type: object
      properties:
        excludeAppsWithInsufficientRating:
          type: boolean
          description: Set to true to exclude unofficial apps or apps with insufficient user ratings (<100 lifetime).
        appStarRating:
          $ref: '#/components/schemas/DVBrandSafetyAppStarRatingType'
        unknownContent:
          type: boolean
          description: Set to true to exclude unknown content.
        contentCategoriesWithRisk:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyContentCategoriesWithRiskMap'
          maxItems: 50
          minItems: 0
        contentCategories:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyContentCategoryType'
          maxItems: 50
          minItems: 0
          description: A list of content categories to exclude from targeting.
        appAgeRating:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyAppAgeRatingType'
          maxItems: 50
          minItems: 0
          description: 'A list of app age ratings to be used for excluding apps. For example, TEENS_12_PLUS will only exclude apps with content rated for everyone ages 12 and over. UNKNOWN will exclude apps with content unrated or unknown to Double Verify.'
      required:
        - appStarRating
        - excludeAppsWithInsufficientRating
        - unknownContent
    DoubleVerifyCustomContextualSegmentId:
      type: object
      properties:
        doubleVerifySegmentId:
          type: string
      required:
        - doubleVerifySegmentId
    DoubleVerifyFraudInvalidTraffic:
      type: object
      properties:
        excludeImpressions:
          type: boolean
          description: Set to true to exclude impressions delivered to devices identified to be fraudulent or invalid.
        excludeAppsAndSites:
          $ref: '#/components/schemas/ExcludeAppsAndSitesType'
        blockAppAndSites:
          type: boolean
          description: Set to true to block applications and sites with insufficient historical fraud and invalid traffic statistics. This will not be applicable if ALLOW_ALL is chosen.
      required:
        - blockAppAndSites
        - excludeAppsAndSites
        - excludeImpressions
    DoubleVerifyStandardDisplayBrandSafety:
      type: object
      properties:
        unknownContent:
          type: boolean
          description: Set to true to exclude unknown content.
        contentCategories:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyContentCategoryType'
          maxItems: 50
          minItems: 0
          description: A list of content categories to exclude from targeting.
        contentCategoriesWithRisk:
          type: array
          items:
            $ref: '#/components/schemas/DVBrandSafetyContentCategoriesWithRiskMap'
          maxItems: 50
          minItems: 0
      required:
        - unknownContent
    DoubleVerifyViewability:
      type: object
      properties:
        averageCompletionAndFullyViewableRateTargeting:
          $ref: '#/components/schemas/AverageCompletionAndFullyViewableRateTargetingType'
        brandExposureViewabilityTargeting:
          $ref: '#/components/schemas/BrandExposureViewabilityTargetingType'
        mrcViewabilityTargeting:
          $ref: '#/components/schemas/MrcViewabilityTargetingType'
        includeUnmeasurableImpressions:
          type: boolean
          description: Set to true to include impressions where impressions can't be measured.
      required:
        - averageCompletionAndFullyViewableRateTargeting
        - brandExposureViewabilityTargeting
        - includeUnmeasurableImpressions
        - mrcViewabilityTargeting
    DspContentRating:
      type: object
      properties:
        dspContentRating:
          $ref: '#/components/schemas/DspContentRatingEnum'
      required:
        - dspContentRating
    DspContentRatingEnum:
      type: string
      enum:
        - SUITABLE_FOR_ADULTS
        - SUITABLE_FOR_MATURE_AUDIENCES
        - SUITABLE_FOR_MOST_AUDIENCES_WITH_PARENTAL_GUIDANCE
        - SUITABLE_FOR_TEEN_AND_OLDER_AUDIENCES
        - RATING_NOT_AVAILABLE
        - SUITABLE_FOR_ALL_AUDIENCES
    Error:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/ErrorMarketplace'
        message:
          type: string
        code:
          $ref: '#/components/schemas/ErrorCode'
        fieldLocation:
          type: string
      required:
        - code
        - message
    ErrorCode:
      type: string
      enum:
        - DATE_CANNOT_BE_IN_PAST
        - TOO_MANY_REQUESTS
        - RESOURCE_IS_EMPTY
        - FIELD_VALUE_NOT_FOUND
        - FIELD_VALUE_IS_NULL
        - FIELD_VALUE_MISMATCH
        - UNSUPPORTED_MARKETPLACE
        - FIELD_VALUE_IS_EMPTY
        - FIELD_SIZE_IS_OUT_OF_RANGE
        - FIELD_SIZE_IS_BELOW_MINIMUM_LIMIT
        - FEATURE_DISCONTINUED
        - DATE_TOO_SOON
        - FIELD_VALUE_IS_OUT_OF_RANGE
        - UNAUTHORIZED
        - FIELD_VALUE_NOT_UNIQUE
        - CONTENT_TOO_LARGE
        - RESOURCE_IS_IN_TERMINAL_STATE
        - FIELD_VALUE_IS_ABOVE_MAXIMUM_LIMIT
        - ARCHIVED_PARENT_CANNOT_CREATE
        - FIELD_VALUE_CANNOT_EDIT
        - RESOURCE_IS_NULL
        - DURATION_TOO_SHORT
        - DUPLICATE_RESOURCE_ID_FOUND
        - ACTION_NOT_SUPPORTED
        - DUPLICATE_FIELD_VALUE_FOUND
        - BAD_REQUEST
        - PAYMENT_ISSUE
        - ARCHIVED_RESOURCE_CANNOT_EDIT
        - FIELD_SIZE_IS_ABOVE_MAXIMUM_LIMIT
        - FIELD_VALUE_CONTAINS_INVALID_CHARACTERS
        - NOT_FOUND
        - INTERNAL_ERROR
        - FIELD_VALUE_IS_BELOW_MINIMUM_LIMIT
        - AUTOCREATED_ENTITY_CANNOT_EDIT
        - FORBIDDEN
        - DATE_CANNOT_BE_NULL
        - RESOURCE_DOES_NOT_BELONG_TO_PARENT
        - FIELD_VALUE_CONTAINS_BLOCKLISTED_WORDS
        - PRODUCT_INELIGIBLE
        - FIELD_VALUE_MUST_BE_EMPTY_OR_NULL
        - RESOURCE_ID_NOT_FOUND
        - ACTIVE_RESOURCE_LIMIT_EXCEEDED
        - FIELD_VALUE_IS_INVALID
        - TOTAL_RESOURCE_LIMIT_EXCEEDED
        - ARCHIVED_PARENT_CANNOT_EDIT
    ErrorMarketplace:
      type: string
      enum:
        - DE
        - EG
        - BE
        - AE
        - IN
        - JP
        - MX
        - IT
        - FR
        - ES
        - SA
        - BR
        - SE
        - AU
        - SG
        - GB
        - PL
        - NL
        - US
        - CA
        - TR
    ErrorsIndex:
      type: object
      properties:
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          minItems: 1
      required:
        - errors
        - index
    ExcludeAppsAndSitesType:
      type: string
      enum:
        - FRAUD_TRAFFIC_LEVEL_GTE_25
        - ALLOW_ALL
        - FRAUD_TRAFFIC_LEVEL_GTE_50
        - FRAUD_TRAFFIC_LEVEL_GTE_100
        - FRAUD_TRAFFIC_LEVEL_GTE_02
        - FRAUD_TRAFFIC_LEVEL_GTE_10
        - FRAUD_TRAFFIC_LEVEL_GTE_04
        - FRAUD_TRAFFIC_LEVEL_GTE_06
        - FRAUD_TRAFFIC_LEVEL_GTE_08
    Fee:
      type: object
      properties:
        thirdPartyProvider:
          $ref: '#/components/schemas/FeesThirdPartyProvider'
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        addToBudgetSpentAmount:
          type: boolean
          description: 'Applies only to THIRD_PARTY_APPLIED_FEE. When set to true, third-party applied fees are are added on top of the total ad group budget spent amount in reports.'
        feeValue:
          type: number
          description: 'The fee amount expressed as the feeValueType. AMAZON_AUDIENCE_FEE AND THIRD_PARTY_AUDIENCE_FEE is in the currency of the marketplace. All other CPM based fees are in the currency of the advertiser. For percentages, 100 represents 100%.'
          format: double
        feeValueType:
          $ref: '#/components/schemas/FeeValueType'
        feeType:
          $ref: '#/components/schemas/FeeType'
      required:
        - currencyCode
        - feeType
        - feeValue
        - feeValueType
    FeeType:
      type: string
      enum:
        - THIRD_PARTY_APPLIED
        - AMAZON_DSP
        - THIRD_PARTY_TARGETING
        - OMNICHANNEL_METRICS
        - AMAZON_AUDIENCE
        - AGENCY
        - THIRD_PARTY_AUDIENCE
    FeeValueType:
      type: string
      enum:
        - FIXED_CPM
        - PERCENTAGE_OF_SUPPLY_COST
        - PERCENTAGE_OF_BUDGET
    FeesThirdPartyProvider:
      type: string
      enum:
        - CPM_3
        - CPM_2
        - DOUBLE_VERIFY
        - INTEGRAL_AD_SCIENCE
        - COM_SCORE
        - CPM_1
        - DOUBLE_CLICK_CAMPAIGN_MANAGER
    FoldPosition:
      type: string
      enum:
        - ABOVE_THE_FOLD
        - BELOW_THE_FOLD
        - UNKNOWN
    FoldPositionTarget:
      type: object
      description: Targets ads in the specified fold position
      properties:
        foldPosition:
          $ref: '#/components/schemas/FoldPosition'
      required:
        - foldPosition
    ForbiddenResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    Frequency:
      type: object
      properties:
        frequencyTargetingSetting:
          $ref: '#/components/schemas/FrequencyTargetingSetting'
        frequencyType:
          $ref: '#/components/schemas/FrequencyType'
        timeCount:
          type: integer
          description: The value associated with the time and unit of time for this frequency cap.
          format: int32
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
        eventMaxCount:
          type: integer
          description: The maximum number of times an EventType is served per user. Required when frequencyType = CAPPED.
          format: int32
      required:
        - frequencyType
    FrequencyTargetingSetting:
      type: string
      enum:
        - USER
        - HOUSEHOLD
    FrequencyType:
      type: string
      enum:
        - CAPPED
        - UNCAPPED
    GatewayTimeoutResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    GlobalStoreSettings:
      type: object
      properties:
        catalogSourceMarketplace:
          $ref: '#/components/schemas/Marketplace'
    Goal:
      type: string
      enum:
        - CONSIDERATION
        - AWARENESS
        - CONVERSIONS
    GoalSettings:
      type: object
      properties:
        goal:
          $ref: '#/components/schemas/Goal'
        kpi:
          $ref: '#/components/schemas/KPI'
        kpiValue:
          type: number
          description: The value of the KPI that the campaign is working to optimize.
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
      required:
        - goal
    IASBrandSafetyLevelType:
      type: string
      description: The IAS brand safety risk level.
      enum:
        - ALLOW_ALL
        - BRAND_SAFETY_EXCLUDE_HIGH_RISK
        - BRAND_SAFETY_EXCLUDE_HIGH_AND_MODERATE_RISK
    IASFraudInvalidTrafficType:
      type: string
      description: The type of fraud invalid traffic.
      enum:
        - ALLOW_ALL
        - FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_RISK
        - FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_MODERATE_RISK
    IASViewabilityStandardType:
      type: string
      description: The viewability standard.
      enum:
        - PUBLICIS
        - GROUPM
        - MRC
        - NONE
    InGroupOperator:
      type: string
      enum:
        - ANY
        - ALL
    IntegralAdScienceBrandSafety:
      type: object
      properties:
        iasBrandSafetyIllegalDownloads:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyGambling:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        excludeContent:
          type: boolean
          description: Set to true to exclude content that Integral Ad Science is not able to rate.
        iasBrandSafetyIllegalDrugs:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyOffensiveLanguage:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyViolence:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyHateSpeech:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyAdult:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
        iasBrandSafetyAlcohol:
          $ref: '#/components/schemas/IASBrandSafetyLevelType'
      required:
        - excludeContent
        - iasBrandSafetyAdult
        - iasBrandSafetyAlcohol
        - iasBrandSafetyGambling
        - iasBrandSafetyHateSpeech
        - iasBrandSafetyIllegalDownloads
        - iasBrandSafetyIllegalDrugs
        - iasBrandSafetyOffensiveLanguage
        - iasBrandSafetyViolence
    IntegralAdScienceContextualAvoidance:
      type: object
      properties:
        avoidanceSegments:
          type: array
          items:
            type: string
          maxItems: 200
          minItems: 0
          description: The unique identifier of the IAS contextual avoidance segment
    IntegralAdScienceContextualTargeting:
      type: object
      properties:
        topicalSegments:
          type: array
          items:
            type: string
          maxItems: 200
          minItems: 0
          description: The unique identifier of the IAS contextual topical targeting segment
        verticalSegments:
          type: array
          items:
            type: string
          maxItems: 200
          minItems: 0
          description: The unique identifier of the IAS contextual vertical targeting segment
    IntegralAdScienceFraudInvalidTraffic:
      type: object
      properties:
        targetSetting:
          $ref: '#/components/schemas/IASFraudInvalidTrafficType'
      required:
        - targetSetting
    IntegralAdScienceQualitySync:
      type: object
      properties:
        segmentId:
          type: string
    IntegralAdScienceViewability:
      type: object
      description: The IAS viewability standard.
      properties:
        standard:
          $ref: '#/components/schemas/IASViewabilityStandardType'
        viewabilityTargeting:
          $ref: '#/components/schemas/ViewabilityTierType'
      required:
        - standard
        - viewabilityTargeting
    InternalServerErrorResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    InventorySourceTarget:
      type: object
      description: Target based on the source of the inventory.
      properties:
        inventorySourceType:
          $ref: '#/components/schemas/InventorySourceType'
        inventorySourceId:
          $ref: '#/components/schemas/MarketplaceStringValue'
      required:
        - inventorySourceId
        - inventorySourceType
    InventorySourceType:
      type: string
      enum:
        - DEAL
        - THIRD_PARTY_EXCHANGE
        - APD
        - INVENTORY_GROUP
        - AMAZON
    InventoryType:
      type: string
      enum:
        - VIDEO
        - AAP_MOBILE_APP
        - STANDARD_DISPLAY
        - DISPLAY
        - AMAZON_MOBILE_DISPLAY
    KPI:
      type: string
      enum:
        - NEW_TO_BRAND_PURCHASES
        - RETURN_ON_AD_SPEND
        - DETAIL_PAGE_VIEW_RATE
        - COST_PER_FIRST_APP_OPEN
        - COST_PER_ACTION
        - COST_PER_SIGN_UP
        - COST_PER_VIDEO_COMPLETION
        - TOP_OF_SEARCH_IMPRESSION_SHARE
        - CLICKS
        - TOTAL_RETURN_ON_AD_SPEND
        - REACH
        - COST_PER_DETAIL_PAGE_VIEW
        - COST_PER_INSTALL
        - COST_PER_CLICK
        - VIDEO_COMPLETION_RATE
        - CLICK_THROUGH_RATE
        - COMBINED_RETURN_ON_AD_SPEND
    KeywordMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        keyword:
          type: string
          description: The customer search term or text to target
        nativeLanguageKeyword:
          type: string
          description: The unlocalized keyword text in the preferred locale of the advertiser
      required:
        - keyword
        - marketplace
    KeywordMatchType:
      type: string
      enum:
        - EXACT
        - PHRASE
        - BROAD
    KeywordTarget:
      type: object
      description: Targets a specific customer search term.
      properties:
        matchType:
          $ref: '#/components/schemas/KeywordMatchType'
        nativeLanguageLocale:
          $ref: '#/components/schemas/LanguageLocale'
        keyword:
          $ref: '#/components/schemas/KeywordValue'
      required:
        - keyword
        - matchType
    KeywordValue:
      type: object
      properties:
        keyword:
          type: string
          description: 'The customer search term or text to target. The keyword value should always be provided, either here or in the marketplace settings'
        nativeLanguageKeyword:
          type: string
          description: The unlocalized keyword text in the preferred locale of the advertiser.
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/KeywordMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The marketplace specific keyword values.
    LanguageLocale:
      type: string
      description: A combination of ISO-639 standard for language code and ISO-3166 for country code.
      enum:
        - zh_CN
        - en_GB
    LocationTarget:
      type: object
      description: Target based on geographic location.
      properties:
        locationId:
          type: string
          description: The ID of the geographic location to target.
      required:
        - locationId
    Marketplace:
      type: string
      description: A list of country codes representing Amazon marketplaces
      enum:
        - BR
        - AU
        - NL
        - SG
        - ES
        - SA
        - EG
        - GB
        - SE
        - BE
        - MX
        - PL
        - IT
        - JP
        - US
        - IN
        - AE
        - FR
        - CA
        - TR
        - DE
    MarketplaceScope:
      type: string
      enum:
        - GLOBAL
        - SINGLE_MARKETPLACE
    MarketplaceStringValue:
      type: object
      properties:
        defaultValue:
          type: string
          description: The default value. Either the default value or the marketplace settings should always be specified
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/StringMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The marketplace specific value pairs. Either the default value or the marketplace settings should always be specified
    MatchType:
      type: string
      enum:
        - KEYWORDS_CLOSE_MATCH
        - KEYWORDS_LOOSE_MATCH
        - KEYWORDS_RELATED_TO_PRIME_DAY
        - KEYWORDS_RELATED_TO_GIFTS
        - KEYWORDS_RELATED_TO_YOUR_BRAND
        - KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES
        - PRODUCT_COMPLEMENTS
        - PRODUCT_SUBSTITUTES
        - KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY
        - PRODUCT_EXACT
        - PRODUCT_SIMILAR
        - EXACT
        - PHRASE
        - BROAD
    MobileDevice:
      type: string
      enum:
        - KINDLE_FIRE_HD
        - IPAD
        - KINDLE_FIRE
        - IPHONE
        - ANDROID
    MobileEnvironment:
      type: string
      enum:
        - WEB
        - APP
    MobileOs:
      type: string
      enum:
        - IOS
        - ANDROID
    MonetaryBudget:
      type: object
      properties:
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
        value:
          type: number
          description: The monetary amount of the budget cap in the given currency.
          format: double
        ruleValue:
          type: number
          description: The monetary amount of the budget when a budget rule is applied.
          format: double
      required:
        - currencyCode
        - value
    MonetaryBudgetMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        monetaryBudget:
          $ref: '#/components/schemas/MonetaryBudget'
      required:
        - marketplace
        - monetaryBudget
    MonetaryBudgetValue:
      type: object
      properties:
        monetaryBudget:
          $ref: '#/components/schemas/MonetaryBudget'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/MonetaryBudgetMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of Monetary Budget values selectively applied at the given marketplace level
    MrcViewabilityTargetingType:
      type: string
      description: The type of MRC viewability targeting.
      enum:
        - MRC_VIEWABILITY_GTE_60
        - MRC_VIEWABILITY_GTE_50
        - MRC_VIEWABILITY_GTE_80
        - MRC_VIEWABILITY_GTE_65
        - MRC_VIEWABILITY_GTE_70
        - MRC_VIEWABILITY_GTE_55
        - MRC_VIEWABILITY_GTE_30
        - ALLOW_ALL
        - MRC_VIEWABILITY_GTE_75
        - MRC_VIEWABILITY_GTE_40
    NativeContentPosition:
      type: string
      enum:
        - IN_ARTICLE
        - RECOMMENDATION
        - UNKNOWN
        - IN_FEED
        - PERIPHERAL
    NativeContentPositionTarget:
      type: object
      description: Targets ads to a specific native content position
      properties:
        nativePosition:
          $ref: '#/components/schemas/NativeContentPosition'
      required:
        - nativePosition
    NewsGuardBrandGuardMisinformationSafety:
      type: object
      properties:
        avoidanceList:
          type: array
          items:
            $ref: '#/components/schemas/NewsGuardBrandGuardMisinformationSafetyType'
          maxItems: 20
          minItems: 0
          description: The unique identifiers of misinformation targets
    NewsGuardBrandGuardMisinformationSafetyType:
      type: string
      enum:
        - QANON_MISINFORMATION
        - VACCINE_MISINFORMATION
        - ISRAEL_HAMAS_MISINFORMATION
        - OPINIONATED_NEWS
        - MISINFORMATION_SITES
        - AI_GENERATED_MFA
        - HEALTH_MISINFORMATION
        - ELECTION_MISINFORMATION
        - COVID_MISINFORMATION
        - CLIMATE_MISINFORMATION
        - HIGH_EXCLUDE
        - UKRAINE_MISINFORMATION
        - MAX_EXCLUDE
        - BASIC_EXCLUDE
    NewsGuardBrandGuardTrustedNewsTargeting:
      type: object
      description: Only applicable for Web supply.
      properties:
        targetingList:
          type: array
          items:
            $ref: '#/components/schemas/NewsGuardBrandGuardTrustedNewsTargetingType'
          maxItems: 15
          minItems: 0
          description: The unique identifiers of trusted news targets
    NewsGuardBrandGuardTrustedNewsTargetingType:
      type: string
      enum:
        - BUSINESS_INCLUDE
        - BASIC_INCLUDE
        - HEALTH_INCLUDE
        - POLITICS_INCLUDE
        - HIGH_INCLUDE
        - LOCAL_INCLUDE
        - MAX_INCLUDE
        - LIFESTYLE_INCLUDE
        - TECH_INCLUDE
        - COMMUNITY_INCLUDE
    NotFoundResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    OffAmazonBudgetControlStrategy:
      type: string
      enum:
        - MAXIMIZE_REACH
        - MINIMIZE_SPEND
    Optimization:
      type: object
      properties:
        bidStrategy:
          $ref: '#/components/schemas/BidStrategy'
        budgetSettings:
          $ref: '#/components/schemas/AdGroupBudgetSettings'
    Pacing:
      type: object
      properties:
        deliveryProfile:
          $ref: '#/components/schemas/DeliveryProfile'
        catchUpBoostPercentage:
          type: integer
          description: 'Available when deliveryProfile is ''EVENLY''. A catch up boost offsets any drops that may occur while ad groups are delivering during weekends, holidays, or other busy time periods. A 300 boost means ad groups can deliver up to three times faster than they normally would within their budget to catch up. A 0 means no boost will be applied. The only acceptable values are 0, 200, 300, and 400.'
          format: int32
    PixalateFraudInvalidTraffic:
      type: object
      properties:
        excludeIpAddressAndUserAgents:
          type: boolean
          description: Set to true to exclude traffic from IPV4 and IPV6 addresses and user agents identified to be fraudulent or invalid.
        excludeOttAndMobileDevices:
          type: boolean
          description: Set to true to exclude traffic from OTT and Mobile devices identified to be fraudulent or invalid.
        excludeRemovedAppsFromAppStores:
          type: boolean
          description: Set to true to exlude traffic from Apps that have been removed from the google play and apple app stores in the last 6 months.
        excludeAppsAndDomains:
          type: boolean
          description: Set to true to exclude traffic from Apps and Domains identified to be fraudulent or invalid.
      required:
        - excludeAppsAndDomains
        - excludeIpAddressAndUserAgents
        - excludeOttAndMobileDevices
        - excludeRemovedAppsFromAppStores
    Placement:
      type: string
      enum:
        - REST_OF_SEARCH
        - HOME_PAGE
        - SITE_AMAZON_BUSINESS
        - PRODUCT_PAGE
        - TOP_OF_SEARCH
    PlacementBidAdjustment:
      type: object
      properties:
        percentage:
          type: integer
          description: The selection of the percentage change associated with a given placement and bid adjustment settings.
          format: int32
        placement:
          $ref: '#/components/schemas/Placement'
      required:
        - percentage
        - placement
    PrimaryInventoryType:
      type: string
      enum:
        - DISPLAY
        - VIDEO_OLV
        - VIDEO_STV
        - AUDIO
    ProductCategoryRefinement:
      type: object
      properties:
        productPriceLessThan:
          type: number
          description: Refinement to target products with a price less than the value within the product category.
          format: double
        productBrandIdResolved:
          type: string
          description: The resolved name of the brand.
        productAgeRangeId:
          type: string
          description: The age range ID to target.
        productRatingGreaterThan:
          type: number
          description: Refinement to target products with a rating greater than the value within the product category.
          format: double
        productCategoryIdResolved:
          type: string
          description: The resolved product category.
        productBrandId:
          type: string
          description: The brand ID to target.
        productRatingLessThan:
          type: number
          description: Refinement to target products with a rating less than the value within the product category.
          format: double
        productAgeRangeIdResolved:
          type: string
          description: The resolved age range to target.
        productPriceGreaterThan:
          type: number
          description: Refinement to target products with a price greater than the value within the product category.
          format: double
        productCategoryId:
          type: string
          description: The product category ID to target.
        productPrimeShippingEligible:
          type: boolean
          description: Target based on if a product is Prime-shipping eligible.
    ProductCategoryRefinementMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        productCategoryRefinement:
          $ref: '#/components/schemas/ProductCategoryRefinement'
      required:
        - marketplace
        - productCategoryRefinement
    ProductCategoryRefinementValue:
      type: object
      properties:
        productCategoryRefinement:
          $ref: '#/components/schemas/ProductCategoryRefinement'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategoryRefinementMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: Marketplace specific product category refinements. Either the value or the marketplaceSettings should always be specified
    ProductCategoryTarget:
      type: object
      description: Targets a specific customer search term.
      properties:
        productCategoryRefinement:
          $ref: '#/components/schemas/ProductCategoryRefinementValue'
        productGenreRefinement:
          $ref: '#/components/schemas/ProductGenreRefinement'
      required:
        - productCategoryRefinement
    ProductCollectionCreative:
      type: object
      description: An ad creative that contains multiple products and a custom image.
    ProductCreative:
      type: object
      description: An ad with a creative built based on the product being advertised.
      properties:
        headline:
          type: string
          description: The headline/custom text associated with the ad creative.
        globalStoreSettings:
          $ref: '#/components/schemas/GlobalStoreSettings'
        advertisedProduct:
          $ref: '#/components/schemas/AdvertisedProducts'
      required:
        - advertisedProduct
    ProductGenreRefinement:
      type: object
      properties:
        productGenreId:
          type: string
          description: The product genre ID to target.
        productGenreIdResolved:
          type: string
          description: The resolved product genre to target.
      required:
        - productGenreId
    ProductIdType:
      type: string
      enum:
        - ASIN
        - SKU
    ProductMarketplaceSetting:
      type: object
      properties:
        productId:
          type: string
          description: The product id applicable at the specified marketplace.
        marketplace:
          $ref: '#/components/schemas/Marketplace'
      required:
        - marketplace
        - productId
    ProductMatchType:
      type: string
      enum:
        - PRODUCT_EXACT
        - PRODUCT_SIMILAR
    ProductTarget:
      type: object
      description: Targets a specific product.
      properties:
        productIdType:
          $ref: '#/components/schemas/ProductIdType'
        matchType:
          $ref: '#/components/schemas/ProductMatchType'
        product:
          $ref: '#/components/schemas/ProductValue'
      required:
        - matchType
        - product
        - productIdType
    ProductValue:
      type: object
      properties:
        productId:
          type: string
          description: The product identifier. Either the product id or the marketplace settings should always be specified
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/ProductMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The product ids at specific marketplace level. Either the product id or the marketplace settings should always be specified
    QueryAdGroupRequest:
      type: object
      properties:
        adProductFilter:
          $ref: '#/components/schemas/AdGroupAdProductFilter'
        campaignIdFilter:
          $ref: '#/components/schemas/AdGroupCampaignIdFilter'
        stateFilter:
          $ref: '#/components/schemas/AdGroupStateFilter'
        adGroupIdFilter:
          $ref: '#/components/schemas/AdGroupAdGroupIdFilter'
        nameFilter:
          $ref: '#/components/schemas/AdGroupNameFilter'
        marketplaceScopeFilter:
          $ref: '#/components/schemas/AdGroupMarketplaceScopeFilter'
        nextToken:
          type: string
        maxResults:
          type: integer
          default: 1000
          maximum: 5000
          minimum: 0
          format: int32
    QueryAdRequest:
      type: object
      properties:
        adProductFilter:
          $ref: '#/components/schemas/AdAdProductFilter'
        adIdFilter:
          $ref: '#/components/schemas/AdAdIdFilter'
        campaignIdFilter:
          $ref: '#/components/schemas/AdCampaignIdFilter'
        stateFilter:
          $ref: '#/components/schemas/AdStateFilter'
        adGroupIdFilter:
          $ref: '#/components/schemas/AdAdGroupIdFilter'
        nameFilter:
          $ref: '#/components/schemas/AdNameFilter'
        marketplaceScopeFilter:
          $ref: '#/components/schemas/AdMarketplaceScopeFilter'
        nextToken:
          type: string
        maxResults:
          type: integer
          default: 1000
          maximum: 1000
          minimum: 0
          format: int32
    QueryCampaignRequest:
      type: object
      properties:
        adProductFilter:
          $ref: '#/components/schemas/CampaignAdProductFilter'
        goalFilter:
          $ref: '#/components/schemas/CampaignGoalFilter'
        campaignIdFilter:
          $ref: '#/components/schemas/CampaignCampaignIdFilter'
        stateFilter:
          $ref: '#/components/schemas/CampaignStateFilter'
        portfolioIdFilter:
          $ref: '#/components/schemas/CampaignPortfolioIdFilter'
        nameFilter:
          $ref: '#/components/schemas/CampaignNameFilter'
        marketplaceScopeFilter:
          $ref: '#/components/schemas/CampaignMarketplaceScopeFilter'
        nextToken:
          type: string
        maxResults:
          type: integer
          maximum: 5000
          minimum: 0
          format: int32
    QueryTargetRequest:
      type: object
      properties:
        adProductFilter:
          $ref: '#/components/schemas/TargetAdProductFilter'
        negativeFilter:
          $ref: '#/components/schemas/TargetNegativeFilter'
        keywordFilter:
          $ref: '#/components/schemas/TargetKeywordFilter'
        matchTypeFilter:
          $ref: '#/components/schemas/TargetMatchTypeFilter'
        campaignIdFilter:
          $ref: '#/components/schemas/TargetCampaignIdFilter'
        stateFilter:
          $ref: '#/components/schemas/TargetStateFilter'
        targetTypeFilter:
          $ref: '#/components/schemas/TargetTargetTypeFilter'
        productIdFilter:
          $ref: '#/components/schemas/TargetProductIdFilter'
        adGroupIdFilter:
          $ref: '#/components/schemas/TargetAdGroupIdFilter'
        nativeLanguageLocaleFilter:
          $ref: '#/components/schemas/TargetLanguageLocaleFilter'
        targetIdFilter:
          $ref: '#/components/schemas/TargetTargetIdFilter'
        marketplaceScopeFilter:
          $ref: '#/components/schemas/TargetMarketplaceScopeFilter'
        nextToken:
          type: string
        maxResults:
          type: integer
          default: 5000
          maximum: 5000
          minimum: 1
          format: int32
    Recurrence:
      type: string
      enum:
        - DAILY
        - MONTHLY
        - LIFETIME
    ServiceUnavailableErrorResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    ShopperCohortBidAdjustment:
      type: object
      properties:
        percentage:
          type: integer
          description: The selection of the percentage change associated with a given shopper cohort and bid adjustment settings.
          format: int32
        shopperCohortType:
          $ref: '#/components/schemas/ShopperCohortType'
        audienceSegments:
          type: array
          items:
            $ref: '#/components/schemas/AudienceSegment'
          maxItems: 2
          minItems: 0
          description: Audience segments associated with bid adjustment settings. Required when AUDIENCE_SEGMENT is used for shopperCohortType.
      required:
        - percentage
        - shopperCohortType
    ShopperCohortType:
      type: string
      enum:
        - AUDIENCE_SEGMENT
    SiteLanguage:
      type: string
      enum:
        - CS
        - TR
        - BN
        - GU
        - ZH
        - OTHER
        - FI
        - AR
        - JA
        - FR
        - TA
        - DA
        - IT
        - NL
        - HI
        - MR
        - ML
        - 'NO'
        - DE
        - ES
        - KN
        - PA
        - PL
        - TE
        - PT
        - SV
        - EN
    State:
      type: string
      enum:
        - ENABLED
        - PAUSED
        - ARCHIVED
    StateMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        state:
          $ref: '#/components/schemas/State'
      required:
        - marketplace
        - state
    States:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/StateMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of State values selectively applied at the given marketplace level
      required:
        - state
    Status:
      type: object
      properties:
        deliveryStatus:
          $ref: '#/components/schemas/DeliveryStatus'
        deliveryReasons:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryReason'
          maxItems: 50
          minItems: 0
          description: This is the list of reasons behind the delivery status.
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/StatusMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: 'The list of marketplace level delivery status and reasons of global resources, for all the marketplaces the global resource is applicable in.'
      required:
        - deliveryStatus
    StatusMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        deliveryStatus:
          $ref: '#/components/schemas/DeliveryStatus'
        deliveryReasons:
          type: array
          items:
            $ref: '#/components/schemas/DeliveryReason'
          maxItems: 50
          minItems: 0
          description: This is the list of reasons behind the delivery status.
      required:
        - deliveryStatus
        - marketplace
    StoreSpotlightCreative:
      type: object
      description: An ad creative that contains ASINs within a brand Store.
    StringMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        value:
          type: string
          description: The value applicable at the specified marketplace.
      required:
        - marketplace
        - value
    TacticsConvertersExclusionType:
      type: string
      enum:
        - NO_EXCLUSION
        - RECENT_CONVERTERS
    Tag:
      type: object
      properties:
        key:
          type: string
          description: A custom key value pair entered by the advertiser.
        value:
          type: string
          description: A custom key value pair entered by the advertiser.
      required:
        - key
        - value
    Target:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/Status'
        targetId:
          type: string
          description: A unique identifier for the target.
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        campaignId:
          type: string
          description: A unique identifier for the campaign associated with the target. Only used for campaign-level targets.
        targetType:
          $ref: '#/components/schemas/TargetType'
        adGroupId:
          type: string
          description: A unique identifier for the ad group associated with the target. Only used for ad-group level targets.
        negative:
          type: boolean
          description: Indicates whether the target is negative or not.
        state:
          $ref: '#/components/schemas/States'
        lastUpdatedDateTime:
          type: string
          description: The date time the target was last updated.
          format: date-time
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        bid:
          $ref: '#/components/schemas/TargetBidValue'
        targetDetails:
          $ref: '#/components/schemas/TargetDetails'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the target
        targetLevel:
          $ref: '#/components/schemas/TargetLevel'
        creationDateTime:
          type: string
          description: The date time the target was created.
          format: date-time
      required:
        - adProduct
        - creationDateTime
        - lastUpdatedDateTime
        - marketplaceScope
        - negative
        - state
        - status
        - targetDetails
        - targetId
        - targetLevel
        - targetType
    TargetAdGroupIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    TargetAdProductFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/AdProduct'
          maxItems: 1
          minItems: 1
      required:
        - include
    TargetBid:
      type: object
      properties:
        bid:
          type: number
          description: The maximum bid for a target.
          format: double
        currencyCode:
          $ref: '#/components/schemas/CurrencyCode'
      required:
        - bid
        - currencyCode
    TargetBidMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        bid:
          $ref: '#/components/schemas/TargetBid'
      required:
        - bid
        - marketplace
    TargetBidValue:
      type: object
      properties:
        bid:
          $ref: '#/components/schemas/TargetBid'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/TargetBidMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The bid associated with the target at specified marketplace level. Either one of bid or marketplaceSettings should always be specified
    TargetCampaignIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    TargetCreate:
      type: object
      properties:
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        adProduct:
          $ref: '#/components/schemas/AdProduct'
        campaignId:
          type: string
          description: A unique identifier for the campaign associated with the target. Only used for campaign-level targets.
        targetType:
          $ref: '#/components/schemas/TargetType'
        adGroupId:
          type: string
          description: A unique identifier for the ad group associated with the target. Only used for ad-group level targets.
        negative:
          type: boolean
          description: Indicates whether the target is negative or not.
        state:
          $ref: '#/components/schemas/CreateStates'
        marketplaceScope:
          $ref: '#/components/schemas/MarketplaceScope'
        bid:
          $ref: '#/components/schemas/CreateTargetBidValue'
        targetDetails:
          $ref: '#/components/schemas/CreateTargetDetails'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/CreateTag'
          maxItems: 50
          minItems: 0
          description: Open ended labels with a key value pair applied to the target
      required:
        - adProduct
        - marketplaceScope
        - negative
        - state
        - targetDetails
        - targetType
    TargetDetails:
      oneOf:
        - type: object
          title: keywordTarget
          properties:
            keywordTarget:
              $ref: '#/components/schemas/KeywordTarget'
          required:
            - keywordTarget
        - type: object
          title: themeTarget
          properties:
            themeTarget:
              $ref: '#/components/schemas/ThemeTarget'
          required:
            - themeTarget
        - type: object
          title: deviceTarget
          properties:
            deviceTarget:
              $ref: '#/components/schemas/DeviceTarget'
          required:
            - deviceTarget
        - type: object
          title: nativeContentPositionTarget
          properties:
            nativeContentPositionTarget:
              $ref: '#/components/schemas/NativeContentPositionTarget'
          required:
            - nativeContentPositionTarget
        - type: object
          title: contentOutstreamPositionTarget
          properties:
            contentOutstreamPositionTarget:
              $ref: '#/components/schemas/ContentOutstreamPositionTarget'
          required:
            - contentOutstreamPositionTarget
        - type: object
          title: audienceTarget
          properties:
            audienceTarget:
              $ref: '#/components/schemas/AudienceTarget'
          required:
            - audienceTarget
        - type: object
          title: thirdPartyTarget
          properties:
            thirdPartyTarget:
              $ref: '#/components/schemas/ThirdPartyTarget'
          required:
            - thirdPartyTarget
        - type: object
          title: locationTarget
          properties:
            locationTarget:
              $ref: '#/components/schemas/LocationTarget'
          required:
            - locationTarget
        - type: object
          title: contentCategoryTarget
          properties:
            contentCategoryTarget:
              $ref: '#/components/schemas/ContentCategoryTarget'
          required:
            - contentCategoryTarget
        - type: object
          title: inventorySourceTarget
          properties:
            inventorySourceTarget:
              $ref: '#/components/schemas/InventorySourceTarget'
          required:
            - inventorySourceTarget
        - type: object
          title: domainTarget
          properties:
            domainTarget:
              $ref: '#/components/schemas/DomainTarget'
          required:
            - domainTarget
        - type: object
          title: productCategoryTarget
          properties:
            productCategoryTarget:
              $ref: '#/components/schemas/ProductCategoryTarget'
          required:
            - productCategoryTarget
        - type: object
          title: adPlayerSizeTarget
          properties:
            adPlayerSizeTarget:
              $ref: '#/components/schemas/AdPlayerSizeTarget'
          required:
            - adPlayerSizeTarget
        - type: object
          title: contentGenreTarget
          properties:
            contentGenreTarget:
              $ref: '#/components/schemas/ContentGenreTarget'
          required:
            - contentGenreTarget
        - type: object
          title: dayPartTarget
          properties:
            dayPartTarget:
              $ref: '#/components/schemas/DayPartTarget'
          required:
            - dayPartTarget
        - type: object
          title: appTarget
          properties:
            appTarget:
              $ref: '#/components/schemas/AppTarget'
          required:
            - appTarget
        - type: object
          title: foldPositionTarget
          properties:
            foldPositionTarget:
              $ref: '#/components/schemas/FoldPositionTarget'
          required:
            - foldPositionTarget
        - type: object
          title: productTarget
          properties:
            productTarget:
              $ref: '#/components/schemas/ProductTarget'
          required:
            - productTarget
        - type: object
          title: contentInstreamPositionTarget
          properties:
            contentInstreamPositionTarget:
              $ref: '#/components/schemas/ContentInstreamPositionTarget'
          required:
            - contentInstreamPositionTarget
        - type: object
          title: videoContentDurationTarget
          properties:
            videoContentDurationTarget:
              $ref: '#/components/schemas/VideoContentDurationTarget'
          required:
            - videoContentDurationTarget
        - type: object
          title: adInitiationTarget
          properties:
            adInitiationTarget:
              $ref: '#/components/schemas/AdInitiationTarget'
          required:
            - adInitiationTarget
        - type: object
          title: contentRatingTarget
          properties:
            contentRatingTarget:
              $ref: '#/components/schemas/ContentRatingTarget'
          required:
            - contentRatingTarget
        - type: object
          title: videoAdFormatTarget
          properties:
            videoAdFormatTarget:
              $ref: '#/components/schemas/VideoAdFormatTarget'
          required:
            - videoAdFormatTarget
    TargetKeywordFilter:
      type: object
      properties:
        queryTermMatchType:
          $ref: '#/components/schemas/TargetKeywordFilterType'
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    TargetKeywordFilterType:
      type: string
      enum:
        - EXACT_MATCH
        - BROAD_MATCH
    TargetLanguageLocaleFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/LanguageLocale'
          maxItems: 2
          minItems: 0
      required:
        - include
    TargetLevel:
      type: string
      enum:
        - CAMPAIGN
        - AD_GROUP
    TargetMarketplaceScopeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/MarketplaceScope'
          maxItems: 1
          minItems: 0
      required:
        - include
    TargetMatchTypeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/MatchType'
          maxItems: 10
          minItems: 0
      required:
        - include
    TargetMultiStatusResponseWithPartialErrors:
      type: object
      properties:
        success:
          type: array
          items:
            $ref: '#/components/schemas/TargetMultiStatusSuccess'
          maxItems: 1000
          minItems: 0
        partialSuccess:
          type: array
          items:
            $ref: '#/components/schemas/TargetPartialIndex'
          maxItems: 1000
          minItems: 0
        error:
          type: array
          items:
            $ref: '#/components/schemas/ErrorsIndex'
          maxItems: 1000
          minItems: 0
    TargetMultiStatusSuccess:
      type: object
      properties:
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        target:
          $ref: '#/components/schemas/Target'
      required:
        - index
        - target
    TargetNegativeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: boolean
          maxItems: 2
          minItems: 0
      required:
        - include
    TargetPartialIndex:
      type: object
      properties:
        target:
          $ref: '#/components/schemas/Target'
        index:
          type: integer
          maximum: 999
          minimum: 0
          format: int32
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          maxItems: 20
          minItems: 1
      required:
        - errors
        - index
        - target
    TargetProductIdFilter:
      type: object
      properties:
        queryTermMatchType:
          $ref: '#/components/schemas/TargetProductIdFilterType'
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    TargetProductIdFilterType:
      type: string
      enum:
        - EXACT_MATCH
        - BROAD_MATCH
    TargetStateFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/State'
          maxItems: 3
          minItems: 0
      required:
        - include
    TargetSuccessResponse:
      type: object
      properties:
        nextToken:
          type: string
        targets:
          type: array
          items:
            $ref: '#/components/schemas/Target'
          maxItems: 5000
          minItems: 0
    TargetTargetIdFilter:
      type: object
      properties:
        include:
          type: array
          items:
            type: string
          maxItems: 100
          minItems: 0
      required:
        - include
    TargetTargetTypeFilter:
      type: object
      properties:
        include:
          type: array
          items:
            $ref: '#/components/schemas/TargetType'
          maxItems: 17
          minItems: 0
      required:
        - include
    TargetType:
      type: string
      enum:
        - PRODUCT_CATEGORY
        - VIDEO_AD_FORMAT
        - CONTENT_OUTSTREAM_POSITION
        - CONTENT_RATING
        - CONTENT_INSTREAM_POSITION
        - AD_INITIATION
        - PRODUCT
        - AUDIENCE
        - KEYWORD
        - VIDEO_CONTENT_DURATION
        - DEVICE
        - THIRD_PARTY
        - FOLD_POSITION
        - DAYPART
        - CONTENT_CATEGORY
        - LOCATION
        - APP
        - AD_PLAYER_SIZE
        - INVENTORY_SOURCE
        - NATIVE_CONTENT_POSITION
        - THEME
        - CONTENT_GENRE
        - DOMAIN
    TargetUpdate:
      type: object
      properties:
        targetId:
          type: string
          description: A unique identifier for the target.
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
          maxItems: 30
          minItems: 0
        state:
          $ref: '#/components/schemas/UpdateStates'
        bid:
          $ref: '#/components/schemas/UpdateTargetBidValue'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTag'
          maxItems: 50
          minItems: 0
      required:
        - targetId
    TargetingSettings:
      type: object
      properties:
        videoCompletionTier:
          $ref: '#/components/schemas/VideoCompletionTier'
        targetedPGDealId:
          type: string
          description: 'DealId to be targeted by the Ad Group being created. If you are creating an ad group targeting a programmatic guaranteed deal, the deal can be provided here.'
        timeZoneType:
          $ref: '#/components/schemas/TimeZoneType'
        tacticsConvertersExclusionType:
          $ref: '#/components/schemas/TacticsConvertersExclusionType'
        defaultAudienceTargetingMatchType:
          $ref: '#/components/schemas/DefaultAudienceTargetingMatchType'
        userLocationSignal:
          $ref: '#/components/schemas/UserLocationSignal'
        enableLanguageTargeting:
          type: boolean
          description: 'If set to true, creatives will only target supply where the content language matches the creative language.'
        siteLanguage:
          $ref: '#/components/schemas/SiteLanguage'
        amazonViewability:
          $ref: '#/components/schemas/AmazonViewability'
    ThemeMatchType:
      type: string
      enum:
        - KEYWORDS_CLOSE_MATCH
        - KEYWORDS_LOOSE_MATCH
        - KEYWORDS_RELATED_TO_PRIME_DAY
        - KEYWORDS_RELATED_TO_GIFTS
        - KEYWORDS_RELATED_TO_YOUR_BRAND
        - KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES
        - PRODUCT_COMPLEMENTS
        - PRODUCT_SUBSTITUTES
        - KEYWORDS_RELATED_TO_YOUR_PRODUCT_CATEGORY
    ThemeTarget:
      type: object
      description: Theme targets let advertisers select high-performing targets based on a common theme.
      properties:
        matchType:
          $ref: '#/components/schemas/ThemeMatchType'
      required:
        - matchType
    ThirdPartyTarget:
      type: object
      properties:
        thirdPartyTargetType:
          $ref: '#/components/schemas/ThirdPartyTargetType'
        thirdPartyTargetDetails:
          $ref: '#/components/schemas/ThirdPartyTargetDetails'
      required:
        - thirdPartyTargetDetails
        - thirdPartyTargetType
    ThirdPartyTargetDetails:
      oneOf:
        - type: object
          title: integralAdScienceContextualTargeting
          properties:
            integralAdScienceContextualTargeting:
              $ref: '#/components/schemas/IntegralAdScienceContextualTargeting'
          required:
            - integralAdScienceContextualTargeting
        - type: object
          title: doubleVerifyViewability
          properties:
            doubleVerifyViewability:
              $ref: '#/components/schemas/DoubleVerifyViewability'
          required:
            - doubleVerifyViewability
        - type: object
          title: doubleVerifyFraudInvalidTraffic
          properties:
            doubleVerifyFraudInvalidTraffic:
              $ref: '#/components/schemas/DoubleVerifyFraudInvalidTraffic'
          required:
            - doubleVerifyFraudInvalidTraffic
        - type: object
          title: newsGuardBrandGuardTrustedNewsTargeting
          properties:
            newsGuardBrandGuardTrustedNewsTargeting:
              $ref: '#/components/schemas/NewsGuardBrandGuardTrustedNewsTargeting'
          required:
            - newsGuardBrandGuardTrustedNewsTargeting
        - type: object
          title: integralAdScienceQualitySync
          properties:
            integralAdScienceQualitySync:
              $ref: '#/components/schemas/IntegralAdScienceQualitySync'
          required:
            - integralAdScienceQualitySync
        - type: object
          title: doubleVerifyAuthenticBrandSafety
          properties:
            doubleVerifyAuthenticBrandSafety:
              $ref: '#/components/schemas/DoubleVerifyAuthenticBrandSafety'
          required:
            - doubleVerifyAuthenticBrandSafety
        - type: object
          title: integralAdScienceBrandSafety
          properties:
            integralAdScienceBrandSafety:
              $ref: '#/components/schemas/IntegralAdScienceBrandSafety'
          required:
            - integralAdScienceBrandSafety
        - type: object
          title: integralAdScienceContextualAvoidance
          properties:
            integralAdScienceContextualAvoidance:
              $ref: '#/components/schemas/IntegralAdScienceContextualAvoidance'
          required:
            - integralAdScienceContextualAvoidance
        - type: object
          title: doubleVerifyBrandSafety
          properties:
            doubleVerifyBrandSafety:
              $ref: '#/components/schemas/DoubleVerifyBrandSafety'
          required:
            - doubleVerifyBrandSafety
        - type: object
          title: pixalateFraudInvalidTraffic
          properties:
            pixalateFraudInvalidTraffic:
              $ref: '#/components/schemas/PixalateFraudInvalidTraffic'
          required:
            - pixalateFraudInvalidTraffic
        - type: object
          title: doubleVerifyStandardDisplayBrandSafety
          properties:
            doubleVerifyStandardDisplayBrandSafety:
              $ref: '#/components/schemas/DoubleVerifyStandardDisplayBrandSafety'
          required:
            - doubleVerifyStandardDisplayBrandSafety
        - type: object
          title: doubleVerifyCustomContextualSegmentId
          properties:
            doubleVerifyCustomContextualSegmentId:
              $ref: '#/components/schemas/DoubleVerifyCustomContextualSegmentId'
          required:
            - doubleVerifyCustomContextualSegmentId
        - type: object
          title: integralAdScienceViewability
          properties:
            integralAdScienceViewability:
              $ref: '#/components/schemas/IntegralAdScienceViewability'
          required:
            - integralAdScienceViewability
        - type: object
          title: newsGuardBrandGuardMisinformationSafety
          properties:
            newsGuardBrandGuardMisinformationSafety:
              $ref: '#/components/schemas/NewsGuardBrandGuardMisinformationSafety'
          required:
            - newsGuardBrandGuardMisinformationSafety
        - type: object
          title: integralAdScienceFraudInvalidTraffic
          properties:
            integralAdScienceFraudInvalidTraffic:
              $ref: '#/components/schemas/IntegralAdScienceFraudInvalidTraffic'
          required:
            - integralAdScienceFraudInvalidTraffic
        - type: object
          title: doubleVerifyAuthenticAttention
          properties:
            doubleVerifyAuthenticAttention:
              $ref: '#/components/schemas/DoubleVerifyAuthenticAttention'
          required:
            - doubleVerifyAuthenticAttention
    ThirdPartyTargetType:
      type: string
      enum:
        - DOUBLE_VERIFY_FRAUD_INVALID_TRAFFIC
        - NEWS_GUARD_BRAND_GUARD_TRUSTED_NEWS_TARGETING
        - INTEGRAL_AD_SCIENCE_QUALITY_SYNC
        - DOUBLE_VERIFY_AUTHENTIC_ATTENTION
        - DOUBLE_VERIFY_CUSTOM_CONTEXTUAL_SEGMENT_ID
        - DOUBLE_VERIFY_STANDARD_DISPLAY_BRAND_SAFETY
        - NEWS_GUARD_BRAND_GUARD_MISINFORMATION_SAFETY
        - DOUBLE_VERIFY_VIEWABILITY
        - DOUBLE_VERIFY_AUTHENTIC_BRAND_SAFETY
        - INTEGRAL_AD_SCIENCE_VIEWABILITY
        - INTEGRAL_AD_SCIENCE_BRAND_SAFETY
        - PIXALATE_FRAUD_INVALID_TRAFFIC
        - INTEGRAL_AD_SCIENCE_CONTEXTUAL_TARGETING
        - DOUBLE_VERIFY_BRAND_SAFETY
        - INTEGRAL_AD_SCIENCE_FRAUD_INVALID_TRAFFIC
        - INTEGRAL_AD_SCIENCE_CONTEXTUAL_AVOIDANCE
    TimeOfDay:
      type: object
      properties:
        startTime:
          type: string
          description: Selected start time
        endTime:
          type: string
          description: Selected end time
      required:
        - endTime
        - startTime
    TimeUnit:
      type: string
      enum:
        - DAYS
        - HOURS
    TimeZoneType:
      type: string
      enum:
        - VIEWER
        - ADVERTISER_REGION
    TooManyRequestsResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    TwitchContentRating:
      type: object
      properties:
        twitchContentRating:
          $ref: '#/components/schemas/TwitchContentRatingEnum'
      required:
        - twitchContentRating
    TwitchContentRatingEnum:
      type: string
      enum:
        - TWITCH_MODERATE
        - TWITCH_RESTRICTIVE
    UnauthorizedResponseContent:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - code
        - message
    UpdateAdGroupBid:
      type: object
      properties:
        defaultBid:
          type: number
          description: The default maximum bid for ads and targets in the ad group. This is used in sponsored ads as the maximum bid during the auction.
          format: double
        baseBid:
          type: number
          description: The lower bound bid used for the ads in the ad group.
          format: double
        maxAverageBid:
          type: number
          description: The max average bid that will be targeted on the ad group across all of the bids (a single bid could be lower or higher that this number).
          format: double
    UpdateAdGroupBidMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        bid:
          $ref: '#/components/schemas/UpdateAdGroupBid'
      required:
        - bid
        - marketplace
    UpdateAdGroupBidValue:
      type: object
      properties:
        bid:
          $ref: '#/components/schemas/UpdateAdGroupBid'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAdGroupBidMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The bid associated with the ad group at specified marketplace level. Either one of bid or marketplaceSettings should always be specified
    UpdateAdGroupBudgetSettings:
      type: object
      properties:
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
        dailyMinSpendValue:
          type: number
          description: Denotes the daily minimum spend on the ad group in local currency.
          format: double
    UpdateAdGroupRequest:
      type: object
      properties:
        adGroups:
          type: array
          items:
            $ref: '#/components/schemas/AdGroupUpdate'
          maxItems: 1000
          minItems: 1
    UpdateAdRequest:
      type: object
      properties:
        ads:
          type: array
          items:
            $ref: '#/components/schemas/AdUpdate'
          maxItems: 1000
          minItems: 1
    UpdateAmazonViewability:
      type: object
      properties:
        viewabilityTier:
          $ref: '#/components/schemas/ViewabilityTier'
        includeUnmeasurableImpressions:
          type: boolean
          description: Must be false if viewabilityTier is set to ALL_TIERS. You can set to true to include impressions that can not be measured when a viewabilityTier other than ALL_TIERS is selected. We recommend setting to false if high viewability is your goal.
      required:
        - includeUnmeasurableImpressions
        - viewabilityTier
    UpdateAudienceSegment:
      type: object
      properties:
        audienceId:
          type: string
          description: This is an Audience identifier vended by Audience Discovery.
        audienceSegmentType:
          $ref: '#/components/schemas/AudienceSegmentType'
      required:
        - audienceId
        - audienceSegmentType
    UpdateBidAdjustments:
      type: object
      properties:
        placementBidAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePlacementBidAdjustment'
          maxItems: 4
          minItems: 0
          description: Bid adjustments based on ad placements.
        shopperCohortBidAdjustments:
          type: array
          items:
            $ref: '#/components/schemas/UpdateShopperCohortBidAdjustment'
          maxItems: 2
          minItems: 0
          description: Bid Adjustments based on shopper cohorts.
    UpdateBidSettings:
      type: object
      properties:
        bidStrategy:
          $ref: '#/components/schemas/BidStrategy'
        bidAdjustments:
          $ref: '#/components/schemas/UpdateBidAdjustments'
    UpdateBudget:
      type: object
      properties:
        recurrenceTimePeriod:
          $ref: '#/components/schemas/Recurrence'
        budgetValue:
          $ref: '#/components/schemas/UpdateBudgetValue'
      required:
        - budgetValue
        - recurrenceTimePeriod
    UpdateBudgetSettings:
      type: object
      properties:
        budgetAllocation:
          $ref: '#/components/schemas/BudgetAllocation'
        offAmazonBudgetControlStrategy:
          $ref: '#/components/schemas/OffAmazonBudgetControlStrategy'
    UpdateBudgetValue:
      oneOf:
        - type: object
          title: monetaryBudgetValue
          properties:
            monetaryBudgetValue:
              $ref: '#/components/schemas/UpdateMonetaryBudgetValue'
          required:
            - monetaryBudgetValue
    UpdateCampaignFlight:
      type: object
      properties:
        flightId:
          type: string
          description: The ID associated with the flight.
        startDateTime:
          type: string
          description: The start date of the flight.
          format: date-time
        endDateTime:
          type: string
          format: date-time
        budget:
          $ref: '#/components/schemas/UpdateBudget'
      required:
        - budget
        - endDateTime
        - flightId
        - startDateTime
    UpdateCampaignOptimizations:
      type: object
      properties:
        bidSettings:
          $ref: '#/components/schemas/UpdateBidSettings'
        goalSettings:
          $ref: '#/components/schemas/UpdateGoalSettings'
        budgetSettings:
          $ref: '#/components/schemas/UpdateBudgetSettings'
        primaryInventoryTypes:
          type: array
          items:
            $ref: '#/components/schemas/PrimaryInventoryType'
          maxItems: 10
          minItems: 0
          description: Primary inventory type of the campaign for filtering KPIs and recommending tactics.
    UpdateCampaignRequest:
      type: object
      properties:
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/CampaignUpdate'
          maxItems: 1000
          minItems: 1
    UpdateCreative:
      oneOf:
        - type: object
          title: productCollectionCreative
          properties:
            productCollectionCreative:
              $ref: '#/components/schemas/UpdateProductCollectionCreative'
          required:
            - productCollectionCreative
        - type: object
          title: videoCreative
          properties:
            videoCreative:
              $ref: '#/components/schemas/UpdateVideoCreative'
          required:
            - videoCreative
        - type: object
          title: storeSpotlightCreative
          properties:
            storeSpotlightCreative:
              $ref: '#/components/schemas/UpdateStoreSpotlightCreative'
          required:
            - storeSpotlightCreative
        - type: object
          title: productCreative
          properties:
            productCreative:
              $ref: '#/components/schemas/UpdateProductCreative'
          required:
            - productCreative
    UpdateFee:
      type: object
      properties:
        thirdPartyProvider:
          $ref: '#/components/schemas/FeesThirdPartyProvider'
        addToBudgetSpentAmount:
          type: boolean
          description: 'Applies only to THIRD_PARTY_APPLIED_FEE. When set to true, third-party applied fees are are added on top of the total ad group budget spent amount in reports.'
        feeValue:
          type: number
          description: 'The fee amount expressed as the feeValueType. AMAZON_AUDIENCE_FEE AND THIRD_PARTY_AUDIENCE_FEE is in the currency of the marketplace. All other CPM based fees are in the currency of the advertiser. For percentages, 100 represents 100%.'
          format: double
        feeType:
          $ref: '#/components/schemas/FeeType'
      required:
        - feeType
        - feeValue
    UpdateFrequency:
      type: object
      properties:
        frequencyTargetingSetting:
          $ref: '#/components/schemas/FrequencyTargetingSetting'
        frequencyType:
          $ref: '#/components/schemas/FrequencyType'
        timeCount:
          type: integer
          description: The value associated with the time and unit of time for this frequency cap.
          format: int32
        timeUnit:
          $ref: '#/components/schemas/TimeUnit'
        eventMaxCount:
          type: integer
          description: The maximum number of times an EventType is served per user. Required when frequencyType = CAPPED.
          format: int32
      required:
        - frequencyType
    UpdateGoalSettings:
      type: object
      properties:
        kpiValue:
          type: number
          description: The value of the KPI that the campaign is working to optimize.
          format: double
    UpdateMonetaryBudget:
      type: object
      properties:
        value:
          type: number
          description: The monetary amount of the budget cap in the given currency.
          format: double
      required:
        - value
    UpdateMonetaryBudgetMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        monetaryBudget:
          $ref: '#/components/schemas/UpdateMonetaryBudget'
      required:
        - marketplace
        - monetaryBudget
    UpdateMonetaryBudgetValue:
      type: object
      properties:
        monetaryBudget:
          $ref: '#/components/schemas/UpdateMonetaryBudget'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/UpdateMonetaryBudgetMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of Monetary Budget values selectively applied at the given marketplace level
    UpdateOptimization:
      type: object
      properties:
        bidStrategy:
          $ref: '#/components/schemas/BidStrategy'
        budgetSettings:
          $ref: '#/components/schemas/UpdateAdGroupBudgetSettings'
    UpdatePacing:
      type: object
      properties:
        deliveryProfile:
          $ref: '#/components/schemas/DeliveryProfile'
        catchUpBoostPercentage:
          type: integer
          description: 'Available when deliveryProfile is ''EVENLY''. A catch up boost offsets any drops that may occur while ad groups are delivering during weekends, holidays, or other busy time periods. A 300 boost means ad groups can deliver up to three times faster than they normally would within their budget to catch up. A 0 means no boost will be applied. The only acceptable values are 0, 200, 300, and 400.'
          format: int32
    UpdatePlacementBidAdjustment:
      type: object
      properties:
        percentage:
          type: integer
          description: The selection of the percentage change associated with a given placement and bid adjustment settings.
          format: int32
        placement:
          $ref: '#/components/schemas/Placement'
      required:
        - percentage
        - placement
    UpdateProductCollectionCreative:
      type: object
      description: An ad creative that contains multiple products and a custom image.
    UpdateProductCreative:
      type: object
      description: An ad with a creative built based on the product being advertised.
      properties:
        headline:
          type: string
          description: The headline/custom text associated with the ad creative.
    UpdateShopperCohortBidAdjustment:
      type: object
      properties:
        percentage:
          type: integer
          description: The selection of the percentage change associated with a given shopper cohort and bid adjustment settings.
          format: int32
        shopperCohortType:
          $ref: '#/components/schemas/ShopperCohortType'
        audienceSegments:
          type: array
          items:
            $ref: '#/components/schemas/UpdateAudienceSegment'
          maxItems: 2
          minItems: 0
          description: Audience segments associated with bid adjustment settings. Required when AUDIENCE_SEGMENT is used for shopperCohortType.
      required:
        - percentage
        - shopperCohortType
    UpdateStateMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        state:
          $ref: '#/components/schemas/State'
      required:
        - marketplace
        - state
    UpdateStates:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/State'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/UpdateStateMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: List of State values selectively applied at the given marketplace level
      required:
        - state
    UpdateStoreSpotlightCreative:
      type: object
      description: An ad creative that contains ASINs within a brand Store.
    UpdateTag:
      type: object
      properties:
        key:
          type: string
          description: A custom key value pair entered by the advertiser.
        value:
          type: string
          description: A custom key value pair entered by the advertiser.
      required:
        - key
        - value
    UpdateTargetBid:
      type: object
      properties:
        bid:
          type: number
          description: The maximum bid for a target.
          format: double
      required:
        - bid
    UpdateTargetBidMarketplaceSetting:
      type: object
      properties:
        marketplace:
          $ref: '#/components/schemas/Marketplace'
        bid:
          $ref: '#/components/schemas/UpdateTargetBid'
      required:
        - bid
        - marketplace
    UpdateTargetBidValue:
      type: object
      properties:
        bid:
          $ref: '#/components/schemas/UpdateTargetBid'
        marketplaceSettings:
          type: array
          items:
            $ref: '#/components/schemas/UpdateTargetBidMarketplaceSetting'
          maxItems: 30
          minItems: 0
          description: The bid associated with the target at specified marketplace level. Either one of bid or marketplaceSettings should always be specified
    UpdateTargetRequest:
      type: object
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/TargetUpdate'
          maxItems: 1000
          minItems: 1
    UpdateTargetingSettings:
      type: object
      properties:
        videoCompletionTier:
          $ref: '#/components/schemas/VideoCompletionTier'
        targetedPGDealId:
          type: string
          description: 'DealId to be targeted by the Ad Group being created. If you are creating an ad group targeting a programmatic guaranteed deal, the deal can be provided here.'
        timeZoneType:
          $ref: '#/components/schemas/TimeZoneType'
        tacticsConvertersExclusionType:
          $ref: '#/components/schemas/TacticsConvertersExclusionType'
        defaultAudienceTargetingMatchType:
          $ref: '#/components/schemas/DefaultAudienceTargetingMatchType'
        userLocationSignal:
          $ref: '#/components/schemas/UserLocationSignal'
        enableLanguageTargeting:
          type: boolean
          description: 'If set to true, creatives will only target supply where the content language matches the creative language.'
        amazonViewability:
          $ref: '#/components/schemas/UpdateAmazonViewability'
    UpdateVideoCreative:
      type: object
      description: An ad with a creative that includes a video.
    UserLocationSignal:
      type: string
      enum:
        - CURRENT
        - MULTIPLE_SIGNALS
    VideoAdFormat:
      type: string
      enum:
        - INSTREAM
        - FULL_EPISODE_PLAYER
        - OUTSTREAM
    VideoAdFormatTarget:
      type: object
      description: Target based on the video ad format.
      properties:
        videoAdFormat:
          $ref: '#/components/schemas/VideoAdFormat'
      required:
        - videoAdFormat
    VideoCompletionTier:
      type: string
      enum:
        - GREATER_THAN_30_PERCENT
        - GREATER_THAN_90_PERCENT
        - GREATER_THAN_50_PERCENT
        - ALL_TIERS
        - GREATER_THAN_80_PERCENT
        - GREATER_THAN_10_PERCENT
        - GREATER_THAN_70_PERCENT
        - GREATER_THAN_40_PERCENT
        - GREATER_THAN_20_PERCENT
        - GREATER_THAN_60_PERCENT
    VideoContentDuration:
      type: string
      enum:
        - EXTENDED
        - UNKNOWN
        - SHORT
        - LONG
        - MEDIUM
    VideoContentDurationTarget:
      type: object
      description: Targets ads to a specific video content duration
      properties:
        duration:
          $ref: '#/components/schemas/VideoContentDuration'
      required:
        - duration
    VideoCreative:
      type: object
      description: An ad with a creative that includes a video.
    VideoInitiationType:
      type: string
      enum:
        - USER_INITIATED
        - AUTOPLAY
        - UNKNOWN
    ViewabilityTier:
      type: string
      enum:
        - LESS_THAN_40_PERCENT
        - GREATER_THAN_60_PERCENT
        - GREATER_THAN_50_PERCENT
        - GREATER_THAN_70_PERCENT
        - GREATER_THAN_40_PERCENT
        - ALL_TIERS
    ViewabilityTierType:
      type: string
      description: The type of viewability tier.
      enum:
        - ALLOW_ALL
        - VIEWABILITY_TIER_LT_40
        - VIEWABILITY_TIER_GT_60
        - VIEWABILITY_TIER_GT_70
        - VIEWABILITY_TIER_GT_40
        - VIEWABILITY_TIER_GT_50
  parameters:
    AccountIdHeader:
      name: Amazon-Ads-AccountId
      in: header
      description: The identifier of an Amazon Ads Advertiser Account.
      schema:
        type: string
    ClientIdHeader:
      name: Amazon-Ads-ClientId
      in: header
      description: The identifier of a client associated with a 'Login with Amazon' account.
      schema:
        type: string
      required: true
    ScopeHeader:
      name: Amazon-Advertising-API-Scope
      in: header
      description: The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id profileId from the response to pass it as input.
      schema:
        type: string
x-amazon-apigateway-request-validator: full
x-amazon-apigateway-request-validators:
  full:
    validateRequestParameters: true
    validateRequestBody: true
